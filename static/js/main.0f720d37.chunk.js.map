{"version":3,"sources":["containers/events-page/events-page.tsx","components/event-duration/event-duration.tsx","components/sub-event-row/sub-event-row.tsx","components/event-row/event-row.tsx","utils/getActualEvent.ts","containers/timers-page/timers-page.tsx","components/group/group.tsx","constants/groups.ts","containers/chemistry-groups/chemistry-groups.tsx","components/logo/logo.tsx","components/navbar/navbar.tsx","utils/createAction.ts","redux/action-creators.ts","redux/selectors.ts","utils/countNeed.ts","containers/calculator-page/calculator-page.tsx","redux/actions.ts","App.tsx","reportWebVitals.ts","redux/reducer-manager.ts","redux/reducers.ts","redux/store.ts","index.tsx"],"names":["cn","createCn","EventsPage","React","className","addLeadingZero","number","add","withAdditional","EventDuration","memo","props","now","duration","useState","timeLeft","setTimeLeft","useEffect","diff","differenceInDays","interval","intervalToDuration","start","end","days","hours","minutes","seconds","Fragment","SubEventRow","event","name","timer","expiring","Date","setNow","eventDate","setInterval","EventRow","ids","note","sub_events","eventImg","src","alt","map","value","getActualEvent","eventTime","newDate","getTime","actualEvent","repeatable","weeks","differenceInWeeks","TimersPage","actualEvents","setActualEvents","Events","i","length","subEvents","actualSubEvents","push","console","log","Group","group","leagues","replace","toLowerCase","league","Groups","ChemistryGroups","Logo","Navbar","exact","to","createAction","type","actionCreator","result","changeValue","id","setTotal","total","setNeeds","needs","calculatorSelector","state","calculator","calculatorResultSelector","results","totalOvrSelector","needsSelector","createSelector","countNeed","need","ranks","count","roundedUp","Math","ceil","avg","needMore","round","CalculatorPage","dispatch","useDispatch","useSelector","onChangeValue","useCallback","e","target","actionCreators","onCount","getState","a","ovr","boosts","Object","keys","parseInt","avgRanks","avgBoosts","avgOvr","onClick","key","sub","onChange","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReducerManager","initialReducers","store","reducers","this","reducer","replaceReducer","combineReducers","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","staticReducers","createStore","applyMiddleware","thunk","reducerManager","configureStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f720d37.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './events-page.scss';\n\nconst cn = createCn('events-page');\n\nexport const EventsPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            Events\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport intervalToDuration from 'date-fns/intervalToDuration';\n\nimport './event-duration.scss';\n\ntype OwnProps = Partial<{\n    now: any;\n    duration: any;\n}>\n\nconst addLeadingZero = (number: number | undefined, add?: number) => {\n    if (!number || number === 0) {\n        return '00';\n    }\n    const withAdditional = add ? number + add : number;\n    return withAdditional < 10 ? '0' + withAdditional : withAdditional;\n};\n\nexport const EventDuration = React.memo<OwnProps>((props) => {\n    const { now, duration } = props;\n    const [timeLeft, setTimeLeft] = useState('');\n\n    useEffect(() => {\n        const diff = differenceInDays(duration, now);\n        const interval = intervalToDuration({\n            start: now,\n            end: duration\n        });\n        if (diff > 2) {\n            const days = diff;\n            setTimeLeft(`${ days } days`);\n        }\n        else {\n            const days = interval.days && interval.days > 0 ? 24 : 0;\n            const hours = addLeadingZero(interval.hours, days);\n            const minutes = addLeadingZero(interval.minutes);\n            const seconds = addLeadingZero(interval.seconds);\n\n            setTimeLeft(`${ hours }:${ minutes }:${ seconds }`);\n        }\n    }, [now, duration])\n\n    return (\n        <React.Fragment>\n            { timeLeft }\n        </React.Fragment>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './sub-event-row.scss';\n\nconst cn = createCn('sub-event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const SubEventRow = React.memo<OwnProps>((props) => {\n    const { name, timer, expiring } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(timer);\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('name') }>{ name }</div>\n            <div className={ cn('timer', {expiring: expiring}) }>\n                <EventDuration now={ now } duration={ eventDate }/>\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { SubEventRow } from '../sub-event-row/sub-event-row';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './event-row.scss';\n\nconst cn = createCn('event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const EventRow = React.memo<OwnProps>((props) => {\n    const { ids, event, note, sub_events } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(event.timer);\n    const eventImg = '/fmt/img/programs/' + ids + '.png';\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }><img src={ eventImg } alt=\"\"/></div>\n            <div className={ cn('content') }>\n                <div className={ cn('main_event') }>\n                    <div className={ cn('name') }>{ event.name }</div>\n                    <div className={ cn('timer', {expiring: event.expiring}) }>\n                        <EventDuration now={ now } duration={ eventDate }/>\n                    </div>\n                </div>\n\n                <div className={ cn('sub_events') }>\n                    { sub_events.map((value: any) => {\n                        return <SubEventRow key={ value.ids } event={ value }/>\n                    }) }\n                </div>\n\n                <div className={ cn('event_note') }>\n                    { note }\n                </div>\n            </div>\n        </div>\n    );\n});\n","import differenceInWeeks from 'date-fns/differenceInWeeks'\nimport add from 'date-fns/add'\n\nexport function getActualEvent(event:any) {\n    const now = new Date().getTime();\n    let actualEvent = event;\n    let eventTime, newDate;\n\n    if (event.event) {\n        eventTime = new Date(event.event.timer).getTime();\n    } else {\n        eventTime = new Date(event.timer).getTime();\n    }\n\n\n    if (actualEvent.repeatable !== '' && eventTime <= now) {\n        const weeks = differenceInWeeks(eventTime, now) * -1 + 1;\n        newDate = add(eventTime, {weeks});\n\n        if (actualEvent.event) {\n            actualEvent.event.timer = newDate;\n        } else {\n            actualEvent.timer = newDate;\n        }\n    }\n\n    const timer = actualEvent.event ? actualEvent.event.timer : actualEvent.timer;\n    const newDateSeconds = new Date(timer).getTime();\n    const expiring = newDateSeconds - now <= 1000 * 60 * 60 * 24;\n\n    if (actualEvent.event) {\n        actualEvent.event.expiring = expiring;\n    } else {\n        actualEvent.expiring = expiring;\n    }\n\n    return actualEvent;\n}\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport Events  from '../../constants/events.json';\nimport { EventRow } from '../../components/event-row/event-row';\nimport { getActualEvent } from '../../utils/getActualEvent';\n\nimport './timers-page.scss';\n\nconst cn = createCn('timers-page');\nconst now = new Date().getTime();\n\nexport const TimersPage = React.memo(() => {\n    const [actualEvents, setActualEvents] = useState([]);\n\n    useEffect(() => {\n        let actualEvents = [...Events];\n        for (let i = 0; i < Events.length; i++) {\n            actualEvents[i] = getActualEvent(actualEvents[i]);\n            let subEvents = actualEvents[i].sub_events;\n\n            let actualSubEvents = [];\n            for (let i = 0; i < subEvents.length; i++) {\n                const eventTimer = new Date(subEvents[i].timer).getTime();\n                if (eventTimer > now || subEvents[i].repeatable !== '') {\n                    actualSubEvents.push(getActualEvent(subEvents[i]));\n                }\n            }\n            actualEvents[i].sub_events = actualSubEvents;\n        }\n        // @ts-ignore\n        setActualEvents(actualEvents);\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            { actualEvents.map((value: any) => {\n                console.log(value.event);\n                const eventTimer = new Date(value.event.timer).getTime();\n                if (eventTimer > now) {\n                    return <EventRow key={ value.ids } event={ value }/>\n                }\n\n                return null;\n            }) }\n        </div>\n    );\n});\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './group.scss';\n\nconst cn = createCn('group');\n\ntype OwnProps = Partial<{\n    group: any;\n}>\n\nexport const Group = React.memo<OwnProps>((props) => {\n    const { name, leagues } = props.group;\n    const eventImg = '/fmt/img/groups/' + name.replace(/\\s/g, '').toLowerCase() + '.png';\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }>\n                <img src={ eventImg } alt=\"\"/>\n            </div>\n            <div className={ cn('content') }>\n                <div className={ cn('header') }>\n\n                    <div className={ cn('name') }>\n                        { name }\n                    </div>\n                </div>\n\n                <div className={ cn('leagues') }>\n                    { leagues.map((league: string) => {\n                        return <div className={ cn('league') }>{ league }</div>\n                    }) }\n                </div>\n            </div>\n        </div>\n    );\n});\n","export const Groups = [\n    {\n        name: 'England',\n        leagues: [\n            'Premier League',\n            'EFL Championship',\n            'EFL League 1',\n            'EFL League 2'\n        ]\n    },\n    {\n        name: 'France',\n        leagues: [\n            'Ligue 1 Uber Eats',\n            'Ligue 2 BKT'\n        ]\n    },\n    {\n        name: 'Italy',\n        leagues: [\n            'Serie A TIM',\n            'Calcio B'\n        ]\n    },\n    {\n        name: 'Germany',\n        leagues: [\n            'Bundesliga',\n            'Bundesliga 2',\n            '3. Liga'\n        ]\n    },\n    {\n        name: 'Spain',\n        leagues: [\n            'LaLiga Santander',\n            'LaLiga Smartbank'\n        ]\n    },\n    {\n        name: 'Western Europe',\n        leagues: [\n            'Liga NOS (Portugal)',\n            'Eredivisie (Netherlands)',\n            '1A Pro League (Belgium)',\n            'Scottish Prem (Scotland)',\n            'SSE Airtricity Lge (Ireland)'\n        ]\n    },\n    {\n        name: 'Eastern Europe',\n        leagues: [\n            'RSL (Switzerland)',\n            'O. Bundesliga (Austria)',\n            '3F Superliga (Denmark)',\n            'Eliteserien (Norway)',\n            'Allsvenskan (Sweden)',\n            'PKO Ektstraklasa (Poland)',\n            'Liga I (Romania)',\n            'Super Lig (Turkey)',\n            'Finnliga (Finland)',\n            'Ceska Liga (Czech Republic)',\n            'League of Russia (Russia)',\n            'Ukrayina Liha (Ukraine)',\n            'Liga Hrvatska (Croatia)',\n            'Hellas Liga (Greece)'\n        ]\n    },\n    {\n        name: 'Rest of World',\n        leagues: [\n            'MLS (USA/Canada)',\n            'Liga BBVA MX (Mexico)',\n            'LPF (Argentina)',\n            'CSL (China)',\n            'K-League 1 (South Korea)',\n            'A-League (Australia/New Zealand)',\n            'Hero ISL (India)',\n            'MBS Pro League (Saudi Arabia)',\n            'United Emirates League (UAE)',\n            'South African FL (South Africa)'\n        ]\n    }\n];\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Group } from '../../components/group/group';\nimport { Groups } from '../../constants/groups'\n\nimport './chemistry-groups.scss';\n\nconst cn = createCn('chemistry-groups');\n\nexport const ChemistryGroups = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <div className={ cn('content') }>\n                {Groups.map((group) => {\n                    return <Group group={group} />\n                })}\n            </div>\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './logo.scss';\n\nconst cn = createCn('logo');\n\nexport const Logo = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <img src=\"/fmt/img/logo.png\" alt=\"\" />\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { NavLink } from 'react-router-dom'\n\nimport './navbar.scss';\n\nconst cn = createCn('navbar');\n\nexport const Navbar = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <NavLink exact={ true } to={ '/fmt' }>Timers</NavLink>\n            <NavLink exact={ true } to={ '/fmt/chemistry' }>Chemistry Groups</NavLink>\n            <NavLink exact={ true } to={ '/fmt/calculator' }>OVR Calculator</NavLink>\n            <div>v2.0.2</div>\n        </div>\n    );\n});\n","type Typed<T> = { type: T };\n\n/**\n * Метод для создания action-creatorа по переданным параметрам.\n * Полученный action-creator может быть использован как в контейнерах, так и в редьюсерах для типизации полученного экшена.\n * Значение типа экшена будет содержаться в поле type сгенерированного action-creatorа\n * @param type Тип возвращаемого экшена. Формируется по принципу \"ИМЯ_ДОМЕННОЙ_ОБЛАСТИ / названиеЭкшена\"\n * @param actionCreator Метод для формирования данных в экшене\n */\nexport function createAction<\n    Type extends string,\n    ActionCreator extends (...args: any[]) => Record<string, any> // eslint-disable-line\n    // @typescript-eslint/no-explicit-any\n    >(type: Type, actionCreator: ActionCreator = (() => ({})) as ActionCreator) {\n    type Arg = Parameters<ActionCreator>;\n    type Ret = ReturnType<ActionCreator>;\n    const result = (...args: Arg) => ({\n        type,\n        ...(actionCreator && (actionCreator(...args) as Ret)),\n    });\n\n    ((result as unknown) as ActionCreator & Typed<Type>).type = type;\n\n    return result as Typed<Type> & typeof result;\n}\n","import { createAction } from '../utils/createAction';\n\nexport const changeValue = createAction('GLOBAL_SEARCH / changeValue', (id: string, value: string) => ({\n    id, value\n}));\n\nexport const countOvr = createAction('GLOBAL_SEARCH / countOvr', () => ({}));\nexport const setTotal = createAction('GLOBAL_SEARCH / setTotal', (total: number) => ({ total }));\nexport const setNeeds = createAction('GLOBAL_SEARCH / setNeeds', (needs: any) => ({ needs }));\n","import { createSelector } from 'reselect';\n\nimport { AppStoreState } from './types';\n\nexport const calculatorSelector = (state: AppStoreState) => state.calculator;\n\nexport const calculatorResultSelector = (state: AppStoreState) => calculatorSelector(state).results;\nexport const totalOvrSelector = (state: AppStoreState) => calculatorSelector(state).total;\nexport const needsSelector = (state: AppStoreState) => calculatorSelector(state).needs;\n\nexport const customGlobalSearchSelector = createSelector(calculatorResultSelector, (result) => result);\n","// const decimalAdjust = (type: string, value: any, exp: any) => {\n//     if (typeof exp === 'undefined' || +exp === 0) {\n//         return Math[type](value);\n//     }\n//     value = +value;\n//     exp = +exp;\n//     if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n//         return NaN;\n//     }\n//     value = value.toString().split('e');\n//     value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n//     value = value.toString().split('e');\n//     return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n// }\n//\n// export function round10(value:any, exp:any) {\n//     return decimalAdjust('round', value, exp);\n// }\n//\n// export function ceil10(value:any, exp:any) {\n//     return decimalAdjust('ceil', value, exp);\n// }\n\nexport function countNeed(need: number, ranks?: number) {\n    let count = need;\n    if (ranks) {\n        count = count - ranks;\n    }\n    const roundedUp = Math.ceil(count / 11);\n    const avg = count / 11;\n\n    console.log(count, roundedUp, avg);\n\n    const needMore = (roundedUp - avg + 0.1 ) * 11;\n    return Math.round(needMore);\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { useDispatch, useSelector } from 'react-redux';\n// import Events  from '../../constants/events.json';\n// import { EventRow } from '../../components/event-row/event-row';\n// import { getActualEvent } from '../../utils/getActualEvent';\nimport './calculator-page.scss';\nimport * as actionCreators from '../../redux/action-creators';\nimport * as thunks from '../../redux/actions';\nimport { calculatorResultSelector, needsSelector, totalOvrSelector } from '../../redux/selectors';\n\nconst cn = createCn('calculator-page');\n// const now = new Date().getTime();\n\nexport const CalculatorPage = React.memo(() => {\n    // const [actualEvents, setActualEvents] = useState([]);\n    const dispatch = useDispatch();\n    const results = useSelector(calculatorResultSelector);\n    const total = useSelector(totalOvrSelector);\n    const needs = useSelector(needsSelector);\n\n    const onChangeValue = useCallback(\n        (id, e) => {\n            console.log(id, e.target.value);\n            dispatch(actionCreators.changeValue(id, e.target.value));\n        },\n        [dispatch]\n    );\n\n    const onCount = useCallback(\n        () => {\n            dispatch(thunks.onCount());\n        },\n        [dispatch]\n    );\n\n    useEffect(() => {\n        console.log(results);\n        // let actualEvents = [...Events];\n        // for (let i = 0; i < Events.length; i++) {\n        //     actualEvents[i] = getActualEvent(actualEvents[i]);\n        //     let subEvents = actualEvents[i].sub_events;\n        //\n        //     let actualSubEvents = [];\n        //     for (let i = 0; i < subEvents.length; i++) {\n        //         const eventTimer = new Date(subEvents[i].timer).getTime();\n        //         if (eventTimer > now || subEvents[i].repeatable !== '') {\n        //             actualSubEvents.push(getActualEvent(subEvents[i]));\n        //         }\n        //     }\n        //     actualEvents[i].sub_events = actualSubEvents;\n        // }\n        // // @ts-ignore\n        // setActualEvents(actualEvents);\n    }, [results]);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('data') }>\n                <div className={ cn('total') }>Total ovr: { total }</div>\n                <div className={ cn('need') }>Next OVR need one of:</div>\n                <table className={cn('need-table')}>\n                    <tr>\n                        <td>OVR:</td>\n                        <td>{ needs.ovr }</td>\n                    </tr>\n                    <tr>\n                        <td>Ranks:</td>\n                        <td>{ needs.ranks }</td>\n                    </tr>\n                    <tr>\n                        <td>Boosts:</td>\n                        <td>{ needs.boosts }</td>\n                    </tr>\n                </table>\n            </div>\n            <div className={ cn('buttons') }>\n                <div className={ cn('count') }>\n                    <button className={ cn('button') } onClick={ onCount }>Count</button>\n                </div>\n            </div>\n            <table>\n                <thead>\n                <tr>\n                    <th>Rating</th>\n                    <th>Tr.Level</th>\n                    <th>Boost</th>\n                </tr>\n                </thead>\n                <tbody>\n                { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((key) => (\n                    <tr>\n                        { ['ovr', 'rank', 'boost'].map((sub) => (\n                            <td><input type=\"number\" id={ sub + key } onChange={ (e) => onChangeValue(sub + key, e) }/>\n                            </td>\n                        )) }\n                    </tr>\n                )) }\n                </tbody>\n            </table>\n        </div>\n    );\n});\n","import { ThunkAction } from 'redux-thunk';\nimport { AppStoreState } from './types';\nimport { calculatorSelector } from './selectors';\n\nimport * as actionCreators from './action-creators';\nimport { CalculatorStateActionsType } from './reducers';\nimport { countNeed } from '../utils/countNeed';\n\nexport function onCount(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    console.log('onCount');\n    return async (dispatch, getState) => {\n        const state = getState();\n        const results = calculatorSelector(state).results;\n        console.log(results);\n        let ovr = 0;\n        let ranks = 0;\n        let boosts = 0;\n\n        // const test:any = {\n        // boost1: \"6\",\n        //     boost2: \"7\",\n        //     boost3: \"6\",\n        //     boost4: \"6\",\n        //     boost5: \"6\",\n        //     boost6: \"6\",\n        //     boost7: \"6\",\n        //     boost8: \"7\",\n        //     boost9: \"6\",\n        //     boost10: \"7\",\n        //     boost11: \"6\",\n        //     ovr1: \"88\",\n        //     ovr2: \"89\",\n        //     ovr3: \"93\",\n        //     ovr4: \"87\",\n        //     ovr5: \"87\",\n        //     ovr6: \"88\",\n        //     ovr7: \"88\",\n        //     ovr8: \"89\",\n        //     ovr9: \"90\",\n        //     ovr10: \"89\",\n        //     ovr11: \"88\",\n        //     rank1: \"5\",\n        //     rank2: \"5\",\n        //     rank3: \"5\",\n        //     rank4: \"5\",\n        //     rank5: \"5\",\n        //     rank6: \"5\",\n        //     rank7: \"5\",\n        //     rank8: \"5\",\n        //     rank9: \"5\",\n        //     rank10: \"10\",\n        //     rank11: \"5\"\n        // }\n\n        for (let i = 1; i <= Object.keys(results).length; i++) {\n            if (results['ovr' + i]) {\n                ovr += parseInt(results['ovr' + i]);\n            }\n            if (results['rank' + i]) {\n                ranks += Math.round(parseInt(results['rank' + i]) / 5);\n            }\n            if (results['boost' + i]) {\n                boosts += parseInt(results['boost' + i]);\n            }\n        }\n        const avgRanks = Math.ceil(ranks / 11);\n        const avgBoosts = Math.ceil(boosts / 11);\n        const avgOvr = Math.ceil((ovr - ranks) / 11);\n\n        const total = avgRanks + avgBoosts + avgOvr;\n\n        dispatch(actionCreators.setTotal(total));\n        dispatch(actionCreators.setNeeds({\n            ranks: countNeed(ranks),\n            boosts: countNeed(boosts),\n            ovr: countNeed(ovr, ranks)\n        }));\n    };\n}\n\n// export function getHistory(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n//     return async (dispatch) => {\n//         await fetchers\n//             .getHistory({\n//                 count: 5,\n//             })\n//             .then((data: any) => {\n//                 dispatch(actionCreators.getHistorySuccess(data));\n//             })\n//             .catch(() => {\n//                 dispatch(actionCreators.getHistoryFailure());\n//             });\n//     };\n// }\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { EventsPage } from './containers/events-page/events-page';\nimport { TimersPage } from './containers/timers-page/timers-page';\nimport { ChemistryGroups } from './containers/chemistry-groups/chemistry-groups';\nimport { Logo } from './components/logo/logo';\nimport { Navbar } from './components/navbar/navbar';\nimport { NavLink } from 'react-router-dom'\nimport { createCn } from 'bem-react-classname';\n\nimport './App.scss';\nimport { CalculatorPage } from './containers/calculator-page/calculator-page';\n\nconst cn = createCn('App');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n            <div className={ cn('header') }>\n                <div className='inner'>\n                    <NavLink exact={ true } to={'/fmt'} ><Logo/></NavLink>\n                    <Navbar/>\n                </div>\n            </div>\n            <div className={ cn('content') }>\n                <div className='inner'>\n\n                        <Switch>\n                            <Route exact={ true } path={ '/fmt' }>\n                                <TimersPage/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/chemistry' }>\n                                <ChemistryGroups/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/events' }>\n                                <EventsPage/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/calculator' }>\n                                <CalculatorPage/>\n                            </Route>\n                        </Switch>\n\n                </div>\n            </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    combineReducers, Reducer, ReducersMapObject, Store,\n} from 'redux';\n\nexport class ReducerManager {\n    reducers: ReducersMapObject;\n\n    store: Store;\n\n    constructor(initialReducers: ReducersMapObject, store: Store) {\n        this.reducers = { ...initialReducers };\n        this.store = store;\n    }\n\n    add(key: string, reducer: Reducer) {\n        if (!key || this.reducers[key]) {\n            return;\n        }\n\n        this.reducers[key] = reducer;\n        this.store?.replaceReducer(combineReducers(this.reducers));\n    }\n\n    remove(key: string) {\n        if (!key || !this.reducers[key]) {\n            return;\n        }\n\n        delete this.reducers[key];\n\n        this.store?.replaceReducer(combineReducers(this.reducers));\n    }\n}\n","import { ActionType } from './types';\nimport * as actionCreators from './action-creators';\n\nexport type CalculatorStateActionsType = ActionType<typeof actionCreators>;\n\nexport type CalculatorState = {\n    results: any,\n    total: number,\n    needs: any\n};\n\nconst initialState: CalculatorState = {\n    results: {},\n    total: 0,\n    needs: {\n        ranks: 0,\n        boosts: 0,\n        ovr: 0\n    }\n};\n\nexport function calculatorReducer(\n    state: CalculatorState = initialState,\n    action: CalculatorStateActionsType\n): CalculatorState {\n    switch (action.type) {\n        case actionCreators.changeValue.type:\n            return {\n                ...state,\n                results: {...state.results, [action.id]: action.value}\n            };\n        case actionCreators.setTotal.type:\n            return {\n                ...state,\n                total: action.total\n            };\n        case actionCreators.setNeeds.type:\n            return {\n                ...state,\n                needs: action.needs\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    applyMiddleware, combineReducers, compose, createStore, PreloadedState, ReducersMapObject,\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { ReducerManager } from './reducer-manager';\nimport { AppStore, AppStoreState } from './types';\nimport { calculatorReducer } from './reducers';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; // eslint-disable-line no-underscore-dangle\n\nfunction configureStore(\n    staticReducers: ReducersMapObject<Partial<AppStoreState>>,\n    initialState?: PreloadedState<Partial<AppStoreState>>,\n): AppStore {\n    const store: AppStore = createStore(\n        combineReducers(staticReducers),\n        initialState,\n        composeEnhancers(applyMiddleware(thunk)),\n    );\n\n    store.reducerManager = new ReducerManager(staticReducers, store);\n\n    return store;\n}\n\nexport const store = configureStore({\n    calculator: calculatorReducer,\n} as ReducersMapObject<Partial<AppStoreState>>);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}