{"version":3,"sources":["components/logo/logo.tsx","components/navbar/navbar.tsx","components/event-duration/event-duration.tsx","components/sub-event-row/sub-event-row.tsx","components/event-row/event-row.tsx","utils/getActualEvent.ts","containers/timers-page/timers-page.tsx","utils/createAction.ts","redux/action-creators.ts","redux/selectors.ts","utils/countNeed.ts","redux/actions.ts","containers/calculator-page/calculator-page.tsx","components/group/group.tsx","constants/groups.ts","containers/chemistry-groups/chemistry-groups.tsx","containers/changelog-page/constants.ts","containers/changelog-page/changelog-page.tsx","containers/custom-router.tsx","App.tsx","reportWebVitals.ts","redux/reducer-manager.ts","redux/reducers.ts","redux/store.ts","index.tsx"],"names":["cn","createCn","Logo","React","className","src","alt","Navbar","exact","to","addLeadingZero","number","add","withAdditional","EventDuration","memo","props","now","duration","useState","timeLeft","setTimeLeft","useEffect","diff","differenceInDays","interval","intervalToDuration","start","end","days","hours","minutes","seconds","Fragment","SubEventRow","event","name","timer","expiring","Date","setNow","eventDate","longRange","getTime","setInterval","EventRow","ids","note","sub_events","eventImg","map","value","getActualEvent","eventTime","newDate","actualEvent","repeatable","weeks","differenceInWeeks","TimersPage","actualEvents","setActualEvents","Events","i","length","subEvents","console","log","actualSubEvents","push","createAction","type","actionCreator","result","changeValue","id","setTotal","total","setNeeds","needs","setResults","results","calculatorSelector","state","calculator","calculatorResultSelector","totalOvrSelector","needsSelector","createSelector","countNeed","need","ranks","count","roundedUp","Math","ceil","avg","needMore","round","onCount","dispatch","getState","a","ovr","boosts","Object","keys","parseInt","avgRanks","avgBoosts","avgOvr","actionCreators","CalculatorPage","useDispatch","useSelector","onChangeValue","useCallback","e","target","thunks","onSave","localStorage","setItem","JSON","stringify","onLoad","getItem","resultsSource","parse","onClick","key","sub","onChange","Group","group","leagues","replace","toLowerCase","league","Groups","ChemistryGroups","LOG","version","changes","ChangelogPage","change","CustomRouter","route","setRoute","location","useLocation","router","queryString","search","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReducerManager","initialReducers","store","reducers","this","reducer","replaceReducer","combineReducers","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","staticReducers","createStore","applyMiddleware","thunk","reducerManager","configureStore","action","ReactDOM","render","document","getElementById"],"mappings":"onCAKMA,G,MAAKC,mBAAS,SAEPC,EAAOC,QAAW,WAC3B,OACI,qBAAKC,UAAYJ,IAAjB,SACI,qBAAKK,IAAI,oBAAoBC,IAAI,UCJvCN,G,MAAKC,mBAAS,WAEPM,EAASJ,QAAW,WAC7B,OACI,sBAAKC,UAAYJ,IAAjB,UACI,cAAC,IAAD,CAASQ,OAAQ,EAAOC,GAAK,yBAA7B,4BACA,cAAC,IAAD,CAASD,OAAQ,EAAOC,GAAK,qBAA7B,oBACA,cAAC,IAAD,CAASD,OAAQ,EAAOC,GAAK,wBAA7B,8BACA,cAAC,IAAD,CAASD,OAAQ,EAAOC,GAAK,wBAA7B,6B,iECHNC,G,MAAiB,SAACC,EAA4BC,GAChD,IAAKD,GAAqB,IAAXA,EACX,MAAO,KAEX,IAAME,EAAiBD,EAAMD,EAASC,EAAMD,EAC5C,OAAOE,EAAiB,GAAK,IAAMA,EAAiBA,IAG3CC,EAAgBX,IAAMY,MAAe,SAACC,GAAW,IAClDC,EAAkBD,EAAlBC,IAAKC,EAAaF,EAAbE,SAD4C,EAEzBC,mBAAS,IAFgB,mBAElDC,EAFkD,KAExCC,EAFwC,KAwBzD,OApBAC,qBAAU,WACN,IAAMC,EAAOC,YAAiBN,EAAUD,GAClCQ,EAAWC,YAAmB,CAChCC,MAAOV,EACPW,IAAKV,IAET,GAAIK,EAAO,EAAG,CAEVF,EAAY,GAAD,OADEE,EACF,cAEV,CACD,IAAMM,EAAOJ,EAASI,MAAQJ,EAASI,KAAO,EAAI,GAAK,EACjDC,EAAQpB,EAAee,EAASK,MAAOD,GACvCE,EAAUrB,EAAee,EAASM,SAClCC,EAAUtB,EAAee,EAASO,SAExCX,EAAY,GAAD,OAAKS,EAAL,YAAgBC,EAAhB,YAA6BC,OAE7C,CAACf,EAAKC,IAGL,cAAC,IAAMe,SAAP,UACMb,OCvCRpB,G,MAAKC,mBAAS,kBAMPiC,EAAc/B,IAAMY,MAAe,SAACC,GAAW,IAAD,EACrBA,EAAMmB,MAAhCC,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,MAAOC,EADkC,EAClCA,SADkC,EAEjCnB,mBAAS,IAAIoB,MAFoB,mBAEhDtB,EAFgD,KAE3CuB,EAF2C,KAGjDC,EAAY,IAAIF,KAAKF,GACrBK,EAAY,IAAIH,MAAK,IAAIA,MAAOI,UAAY,YASlD,OAPArB,qBAAU,WACNsB,aAAY,WACR,IAAM3B,EAAM,IAAIsB,KAChBC,EAAOvB,KACR,OACJ,IAGC,sBAAKb,UAAYJ,IAAjB,UACI,qBAAKI,UAAYJ,EAAG,QAApB,SAAgCoC,IAChC,qBAAKhC,UAAYJ,EAAG,QAAS,CAACsC,SAAUA,IAAxC,SACKI,EAAYD,GACT,cAAC3B,EAAD,CAAeG,IAAMA,EAAMC,SAAWuB,YCvBpDzC,G,MAAKC,mBAAS,cAMP4C,EAAW1C,IAAMY,MAAe,SAACC,GAAW,IAAD,EACXA,EAAMmB,MAAvCW,EAD4C,EAC5CA,IAAKX,EADuC,EACvCA,MAAOY,EADgC,EAChCA,KAAMC,EAD0B,EAC1BA,WAD0B,EAE9B7B,mBAAS,IAAIoB,MAFiB,mBAE7CtB,EAF6C,KAExCuB,EAFwC,KAG9CC,EAAY,IAAIF,KAAKJ,EAAME,OAC3BY,EAAW,qBAAuBH,EAAM,OACxCJ,EAAY,IAAIH,MAAK,IAAIA,MAAOI,UAAY,YAUlD,OAPArB,qBAAU,WACNsB,aAAY,WACR,IAAM3B,EAAM,IAAIsB,KAChBC,EAAOvB,KACR,OACJ,IAGC,sBAAKb,UAAYJ,IAAjB,UACI,qBAAKI,UAAYJ,EAAG,OAApB,SAA6B,qBAAKK,IAAM4C,EAAW3C,IAAI,OACvD,sBAAKF,UAAYJ,EAAG,WAApB,UACI,sBAAKI,UAAYJ,EAAG,cAApB,UACI,qBAAKI,UAAYJ,EAAG,QAApB,SAAgCmC,EAAMC,OACtC,qBAAKhC,UAAYJ,EAAG,QAAS,CAACsC,SAAUH,EAAMG,WAA9C,SACKI,EAAYD,GACT,cAAC3B,EAAD,CAAeG,IAAMA,EAAMC,SAAWuB,SAKlD,qBAAKrC,UAAYJ,EAAG,cAApB,SACMgD,EAAWE,KAAI,SAACC,GACd,OAAO,cAACjB,EAAD,CAA+BC,MAAQgB,GAApBA,EAAML,UAIxC,qBAAK1C,UAAYJ,EAAG,cAApB,SACM+C,a,gBC7Cf,SAASK,EAAejB,GAC3B,IAEIkB,EAAWC,EAFTrC,GAAM,IAAIsB,MAAOI,UACnBY,EAAcpB,EAUlB,GANIkB,EADAlB,EAAMA,MACM,IAAII,KAAKJ,EAAMA,MAAME,OAAOM,UAE5B,IAAIJ,KAAKJ,EAAME,OAAOM,UAIP,KAA3BY,EAAYC,YAAqBH,GAAapC,EAAK,CACnD,IAAMwC,GAA6C,EAArCC,YAAkBL,EAAWpC,GAAY,EACvDqC,EAAU1C,YAAIyC,EAAW,CAACI,UAEtBF,EAAYpB,MACZoB,EAAYpB,MAAME,MAAQiB,EAE1BC,EAAYlB,MAAQiB,EAI5B,IAAMjB,EAAQkB,EAAYpB,MAAQoB,EAAYpB,MAAME,MAAQkB,EAAYlB,MAElEC,EADiB,IAAIC,KAAKF,GAAOM,UACL1B,GAAO,MAQzC,OANIsC,EAAYpB,MACZoB,EAAYpB,MAAMG,SAAWA,EAE7BiB,EAAYjB,SAAWA,EAGpBiB,E,UC5BLvD,EAAKC,mBAAS,eACdgB,GAAM,IAAIsB,MAAOI,UAEVgB,EAAaxD,IAAMY,MAAK,WAAO,IAAD,EACCI,mBAAS,IADV,mBAChCyC,EADgC,KAClBC,EADkB,KAyBvC,OAtBAvC,qBAAU,WAEN,IADA,IAAIsC,EAAY,YAAOE,GACdC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAAK,CACpCH,EAAaG,GAAKX,EAAeQ,EAAaG,IAC9C,IAAIE,EAAgBL,EAAaG,GAAGf,WAGpC,GAFAkB,QAAQC,IAAIF,EAAUD,QAElBC,EAAUD,OAAS,EAAG,CAEtB,IADA,IAAII,EAAsB,GACjBL,EAAI,EAAGA,EAAIE,EAAUD,OAAQD,IAAK,EACpB,IAAIxB,KAAK0B,EAAUF,GAAG1B,OAAOM,UAC/B1B,GAAmC,KAA5BgD,EAAUF,GAAGP,aACjCY,EAAgBC,KAAKjB,EAAea,EAAUF,KAGtDH,EAAaG,GAAGf,WAAaoB,GAIrCP,EAAgBD,KACjB,IAGC,qBAAKxD,UAAYJ,IAAjB,SACM4D,EAAaV,KAAI,SAACC,GAGhB,OAFAe,QAAQC,IAAIhB,EAAMhB,OACC,IAAII,KAAKY,EAAMhB,MAAME,OAAOM,UAC9B1B,EACN,cAAC4B,EAAD,CAA4BV,MAAQgB,GAApBA,EAAML,KAG1B,a,uBCpChB,SAASwB,EAIVC,GAA2E,IAA/DC,EAA8D,uDAA9B,iBAAO,IAG/CC,EAAS,+BACXF,QACIC,GAAkBA,EAAa,WAAb,eAK1B,OAFEC,EAAmDF,KAAOA,EAErDE,ECrBJ,IAAMC,EAAcJ,EAAa,+BAA+B,SAACK,EAAYxB,GAAb,MAAgC,CACnGwB,KAAIxB,YAIKyB,GADWN,EAAa,4BAA4B,iBAAO,MAChDA,EAAa,4BAA4B,SAACO,GAAD,MAAoB,CAAEA,aAC1EC,EAAWR,EAAa,4BAA4B,SAACS,GAAD,MAAiB,CAAEA,YACvEC,EAAaV,EAAa,8BAA8B,SAACW,GAAD,MAAmB,CAAEA,c,iCCL7EC,EAAqB,SAACC,GAAD,OAA0BA,EAAMC,YAErDC,EAA2B,SAACF,GAAD,OAA0BD,EAAmBC,GAAOF,SAC/EK,EAAmB,SAACH,GAAD,OAA0BD,EAAmBC,GAAON,OACvEU,EAAgB,SAACJ,GAAD,OAA0BD,EAAmBC,GAAOJ,OAEvCS,YAAeH,GAA0B,SAACZ,GAAD,OAAYA,KCaxF,SAASgB,EAAUC,EAAcC,GACpC,IAAIC,EAAQF,EACRC,IACAC,GAAgBD,GAEpB,IAAME,EAAYC,KAAKC,KAAKH,EAAQ,IAC9BI,EAAMJ,EAAQ,GAEpB1B,QAAQC,IAAIyB,EAAOC,EAAWG,GAE9B,IAAMC,EAAsC,IAA1BJ,EAAYG,EAAM,IACpC,OAAOF,KAAKI,MAAMD,GC1Bf,SAASE,IACZ,8CAAO,WAAOC,EAAUC,GAAjB,+BAAAC,EAAA,sDA4CH,IA3CMnB,EAAQkB,IACRpB,EAAUC,EAAmBC,GAAOF,QAC1Cf,QAAQC,IAAIc,GACRsB,EAAM,EACNZ,EAAQ,EACRa,EAAS,EAsCJzC,EAAI,EAAGA,GAAK0C,OAAOC,KAAKzB,GAASjB,OAAQD,IAC1CkB,EAAQ,MAAQlB,KAChBwC,GAAOI,SAAS1B,EAAQ,MAAQlB,KAEhCkB,EAAQ,OAASlB,KACjB4B,GAASG,KAAKI,MAAMS,SAAS1B,EAAQ,OAASlB,IAAM,IAEpDkB,EAAQ,QAAUlB,KAClByC,GAAUG,SAAS1B,EAAQ,QAAUlB,KAGvC6C,EAAWd,KAAKC,KAAKJ,EAAQ,IAC7BkB,EAAYf,KAAKC,KAAKS,EAAS,IAC/BM,EAAShB,KAAKC,MAAMQ,EAAMZ,GAAS,IAIzCS,EAASW,EAFKH,EAAWC,EAAYC,IAGrCV,EAASW,EAAwB,CAC7BpB,MAAOF,EAAUE,GACjBa,OAAQf,EAAUe,GAClBD,IAAKd,EAAUc,EAAKZ,MAjErB,4CAAP,wDCEJ,IAAM3F,EAAKC,mBAAS,mBAGP+G,EAAiB7G,IAAMY,MAAK,WAErC,IAAMqF,EAAWa,cACXhC,EAAUiC,YAAY7B,GACtBR,EAAQqC,YAAY5B,GACpBP,EAAQmC,YAAY3B,GAEpB4B,EAAgBC,uBAClB,SAACzC,EAAI0C,GACDnD,QAAQC,IAAIQ,EAAI0C,EAAEC,OAAOnE,OACzBiD,EAASW,EAA2BpC,EAAI0C,EAAEC,OAAOnE,UAErD,CAACiD,IAGCD,EAAUiB,uBACZ,WACIhB,EAASmB,OAEb,CAACnB,IAGCoB,EAASJ,uBACX,WACIhB,GD0CRlC,QAAQC,IAAI,UACZ,uCAAO,WAAOiC,EAAUC,GAAjB,iBAAAC,EAAA,sDACGnB,EAAQkB,IACRpB,EAAUC,EAAmBC,GAAOF,QAC1Cf,QAAQC,IAAIiC,GACZlC,QAAQC,IAAIc,GAEZwC,aAAaC,QAAQ,UAAWC,KAAKC,UAAU3C,IAN5C,2CAAP,4DCzCI,CAACmB,IAGCyB,EAAST,uBACX,WACIhB,GD+CRlC,QAAQC,IAAI,WACZ,uCAAO,WAAOiC,GAAP,iBAAAE,EAAA,sDACCmB,aAAaK,QAAQ,aACfC,EAAgBN,aAAaK,QAAQ,YAAc,GACnD7C,EAAU0C,KAAKK,MAAMD,GAC3B7D,QAAQC,IAAIc,GACZmB,EAASW,EAA0B9B,IACnCmB,EAASD,MANV,2CAAP,0DC9CI,CAACC,IAuBL,OApBA9E,qBAAU,WACN4C,QAAQC,IAAIc,KAiBb,CAACA,IAGA,sBAAK7E,UAAYJ,IAAjB,UACI,sBAAKI,UAAYJ,EAAG,QAApB,UACI,sBAAKI,UAAYJ,EAAG,SAApB,wBAA4C6E,KAC5C,sBAAKzE,UAAWJ,EAAG,WAAnB,UACI,wBAAQI,UAAYJ,EAAG,UAAYiI,QAAU9B,EAA7C,mBACA,wBAAQ/F,UAAYJ,EAAG,eAAiBiI,QAAUT,EAAlD,kBACA,wBAAQpH,UAAYJ,EAAG,eAAiBiI,QAAUJ,EAAlD,wBAGR,sBAAKzH,UAAWJ,EAAG,gBAAnB,UACI,qBAAKI,UAAYJ,EAAG,QAApB,uBACA,wBAAOI,UAAWJ,EAAG,cAArB,UACI,+BACI,sCACA,6BAAM+E,EAAMwB,SAEhB,+BACI,wCACA,6BAAMxB,EAAMY,WAEhB,+BACI,yCACA,6BAAMZ,EAAMyB,kBAIxB,qBAAKpG,UAAWJ,EAAG,SAAnB,SACM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIkD,KAAI,SAACgF,GAAD,OACtC,qBAAK9H,UAAWJ,EAAG,qBAAuBkI,GAA1C,SACM,CAAC,QAAS,MAAO,QAAQhF,KAAI,SAACiF,GAAD,OAC3B,qBAAK/H,UAAWJ,EAAGmI,GAAnB,SACI,uBACIxD,GAAKwD,EAAMD,EACXE,SAAW,SAACf,GAAD,OAAOF,EAAcgB,EAAMD,EAAKb,IAC3ClE,MAAO8B,EAAQkD,EAAID,uBCpGjDlI,G,MAAKC,mBAAS,UAMPoI,GAAQlI,IAAMY,MAAe,SAACC,GAAW,IAAD,EACvBA,EAAMsH,MAAxBlG,EADyC,EACzCA,KAAMmG,EADmC,EACnCA,QACRtF,EAAW,mBAAqBb,EAAKoG,QAAQ,MAAO,IAAIC,cAAgB,OAE9E,OACI,sBAAKrI,UAAYJ,IAAjB,UACI,qBAAKI,UAAYJ,EAAG,OAApB,SACI,qBAAKK,IAAM4C,EAAW3C,IAAI,OAE9B,sBAAKF,UAAYJ,EAAG,WAApB,UACI,qBAAKI,UAAYJ,EAAG,UAApB,SAEI,qBAAKI,UAAYJ,EAAG,QAApB,SACMoC,MAIV,qBAAKhC,UAAYJ,EAAG,WAApB,SACMuI,EAAQrF,KAAI,SAACwF,GACX,OAAO,qBAAKtI,UAAYJ,EAAG,UAApB,SAAkC0I,kBC9BpDC,GAAS,CAClB,CACIvG,KAAM,UACNmG,QAAS,CACL,iBACA,mBACA,eACA,iBAGR,CACInG,KAAM,SACNmG,QAAS,CACL,oBACA,gBAGR,CACInG,KAAM,QACNmG,QAAS,CACL,cACA,aAGR,CACInG,KAAM,UACNmG,QAAS,CACL,aACA,eACA,YAGR,CACInG,KAAM,QACNmG,QAAS,CACL,mBACA,qBAGR,CACInG,KAAM,iBACNmG,QAAS,CACL,sBACA,2BACA,0BACA,2BACA,iCAGR,CACInG,KAAM,iBACNmG,QAAS,CACL,oBACA,0BACA,yBACA,uBACA,uBACA,4BACA,mBACA,qBACA,qBACA,8BACA,4BACA,0BACA,0BACA,yBAGR,CACInG,KAAM,gBACNmG,QAAS,CACL,mBACA,wBACA,kBACA,cACA,2BACA,mCACA,mBACA,gCACA,+BACA,qCCzENvI,I,MAAKC,mBAAS,qBAEP2I,GAAkBzI,QAAW,WACtC,OACI,qBAAKC,UAAYJ,KAAjB,SACI,qBAAKI,UAAYJ,GAAG,WAApB,SACK2I,GAAOzF,KAAI,SAACoF,GACT,OAAO,cAACD,GAAD,CAAOC,MAAOA,cCd5BO,I,MAAM,CACf,CACIC,QAAS,QACTC,QAAS,CACL,iMAGR,CACID,QAAS,QACTC,QAAS,CACL,yFACA,oWAGR,CACID,QAAS,QACTC,QAAS,CACL,yHAGR,CACID,QAAS,QACTC,QAAS,CACL,mIACA,qKCnBN/I,GAAKC,mBAAS,kBAEP+I,GAAgB7I,IAAMY,MAAK,WACpC,OACI,sBAAKX,UAAYJ,KAAjB,UACI,qBAAKI,UAAWJ,GAAG,WAAnB,uBAGA,qBAAKI,UAAWJ,GAAG,WAAnB,SACK6I,GAAI3F,KAAI,SAACiB,GACN,OAAO,sBAAK/D,UAAWJ,GAAG,OAAnB,UACH,qBAAKI,UAAWJ,GAAG,iBAAnB,SAEQmE,EAAI2E,UAGZ,qBAAK1I,UAAWJ,GAAG,eAAnB,SACI,6BACKmE,EAAI4E,QAAQ7F,KAAI,SAAC+F,GACd,OAAO,oCAAOA,0BCdrCC,GAAe/I,IAAMY,MAAK,WAAO,IAAD,EACfI,mBAAS,cAAC6F,EAAD,KADM,mBAClCmC,EADkC,KAC3BC,EAD2B,KAEnCC,EAAWC,cAyBjB,OAvBAhI,qBAAU,WACN,IACOiI,EADQC,IAAYxB,MAAMqB,EAASI,QACnCF,OAGP,OAFArF,QAAQC,IAAIoF,GAEJA,GACJ,IAAK,YACDH,EAAS,cAACR,GAAD,KACT,MACJ,IAAK,SACDQ,EAAS,cAACzF,EAAD,KACT,MACJ,IAAK,aACDyF,EAAS,cAACpC,EAAD,KACT,MACJ,IAAK,YACDoC,EAAS,cAACJ,GAAD,KACT,MACJ,QACII,EAAS,cAACpC,EAAD,QAElB,CAACqC,IAGA,cAAC,IAAMpH,SAAP,UACKkH,OC7BPnJ,GAAKC,mBAAS,OA0BLyJ,OAxBf,WACI,OACI,qBAAKtJ,UAAU,MAAf,SACI,eAAC,IAAD,WACA,qBAAKA,UAAYJ,GAAG,UAApB,SACI,sBAAKI,UAAU,QAAf,UACI,cAAC,IAAD,CAASI,OAAQ,EAAOC,GAAI,QAA5B,SAAsC,cAACP,EAAD,MACtC,cAACK,EAAD,SAGR,qBAAKH,UAAYJ,GAAG,WAApB,SACI,qBAAKI,UAAU,QAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOuJ,KAAO,OAAd,SACI,cAACT,GAAD,kBCZbU,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCLDQ,GAAb,WAKI,WAAYC,EAAoCC,GAAe,0BAJ/DC,cAI8D,OAF9DD,WAE8D,EAC1DE,KAAKD,SAAL,eAAqBF,GACrBG,KAAKF,MAAQA,EAPrB,iDAUQrC,EAAawC,GAAmB,IAAD,EAC1BxC,IAAOuC,KAAKD,SAAStC,KAI1BuC,KAAKD,SAAStC,GAAOwC,EACrB,UAAAD,KAAKF,aAAL,SAAYI,eAAeC,aAAgBH,KAAKD,cAhBxD,6BAmBWtC,GAAc,IAAD,EACXA,GAAQuC,KAAKD,SAAStC,YAIpBuC,KAAKD,SAAStC,GAErB,UAAAuC,KAAKF,aAAL,SAAYI,eAAeC,aAAgBH,KAAKD,gBA1BxD,K,SCOMK,GAAgC,CAClC5F,QAAS,GACTJ,MAAO,EACPE,MAAO,CACHY,MAAO,EACPa,OAAQ,EACRD,IAAK,ICRb,IAAMuE,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAiBpG,IAAMV,GAfb,SACIW,EACAL,GAEA,IAAMN,EAAkBY,aACpBP,aAAgBM,GAChBL,EACAC,GAAiBM,aAAgBC,QAKrC,OAFAd,EAAMe,eAAiB,IAAIjB,GAAea,EAAgBX,GAEnDA,EAGUgB,CAAe,CAChCnG,WDNG,WAGa,IAFhBD,EAEe,uDAFU0F,GACzBW,EACe,uCACf,OAAQA,EAAOjH,MACX,KAAKwC,EAA2BxC,KAC5B,OAAO,2BACAY,GADP,IAEIF,QAAQ,2BAAKE,EAAMF,SAAZ,mBAAsBuG,EAAO7G,GAAK6G,EAAOrI,UAExD,KAAK4D,EAAwBxC,KACzB,OAAO,2BACAY,GADP,IAEIN,MAAO2G,EAAO3G,QAEtB,KAAKkC,EAA0BxC,KAC3B,OAAO,2BACAY,GADP,IAEIF,QAASuG,EAAOvG,UAExB,KAAK8B,EAAwBxC,KACzB,OAAO,2BACAY,GADP,IAEIJ,MAAOyG,EAAOzG,QAEtB,QACI,OAAOI,MEvCnBsG,IAASC,OACL,cAAC,IAAD,CAAUnB,MAAQA,GAAlB,SACI,cAAC,GAAD,MAEJoB,SAASC,eAAe,SAM5BhC,O","file":"static/js/main.3d6c4e38.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './logo.scss';\n\nconst cn = createCn('logo');\n\nexport const Logo = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <img src=\"/fmt/img/logo.png\" alt=\"\" />\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { NavLink } from 'react-router-dom'\n\nimport './navbar.scss';\n\nconst cn = createCn('navbar');\n\nexport const Navbar = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <NavLink exact={ true } to={ '/fmt?router=calculator' }>OVR Calculator</NavLink>\n            <NavLink exact={ true } to={ '/fmt?router=timers' }>Timers</NavLink>\n            <NavLink exact={ true } to={ '/fmt?router=chemistry' }>Chemistry Groups</NavLink>\n            <NavLink exact={ true } to={ '/fmt?router=changelog' }>Changelog</NavLink>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport intervalToDuration from 'date-fns/intervalToDuration';\n\nimport './event-duration.scss';\n\ntype OwnProps = Partial<{\n    now: any;\n    duration: any;\n}>\n\nconst addLeadingZero = (number: number | undefined, add?: number) => {\n    if (!number || number === 0) {\n        return '00';\n    }\n    const withAdditional = add ? number + add : number;\n    return withAdditional < 10 ? '0' + withAdditional : withAdditional;\n};\n\nexport const EventDuration = React.memo<OwnProps>((props) => {\n    const { now, duration } = props;\n    const [timeLeft, setTimeLeft] = useState('');\n\n    useEffect(() => {\n        const diff = differenceInDays(duration, now);\n        const interval = intervalToDuration({\n            start: now,\n            end: duration\n        });\n        if (diff > 2) {\n            const days = diff;\n            setTimeLeft(`${ days } days`);\n        }\n        else {\n            const days = interval.days && interval.days > 0 ? 24 : 0;\n            const hours = addLeadingZero(interval.hours, days);\n            const minutes = addLeadingZero(interval.minutes);\n            const seconds = addLeadingZero(interval.seconds);\n\n            setTimeLeft(`${ hours }:${ minutes }:${ seconds }`);\n        }\n    }, [now, duration])\n\n    return (\n        <React.Fragment>\n            { timeLeft }\n        </React.Fragment>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './sub-event-row.scss';\n\nconst cn = createCn('sub-event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const SubEventRow = React.memo<OwnProps>((props) => {\n    const { name, timer, expiring } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(timer);\n    const longRange = new Date(new Date().getTime() + 31556952000);\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('name') }>{ name }</div>\n            <div className={ cn('timer', {expiring: expiring}) }>\n                {longRange > eventDate &&\n                    <EventDuration now={ now } duration={ eventDate }/>\n                }\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { SubEventRow } from '../sub-event-row/sub-event-row';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './event-row.scss';\n\nconst cn = createCn('event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const EventRow = React.memo<OwnProps>((props) => {\n    const { ids, event, note, sub_events } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(event.timer);\n    const eventImg = '/fmt/img/programs/' + ids + '.png';\n    const longRange = new Date(new Date().getTime() + 31556952000);\n\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }><img src={ eventImg } alt=\"\"/></div>\n            <div className={ cn('content') }>\n                <div className={ cn('main_event') }>\n                    <div className={ cn('name') }>{ event.name }</div>\n                    <div className={ cn('timer', {expiring: event.expiring}) }>\n                        {longRange > eventDate &&\n                            <EventDuration now={ now } duration={ eventDate }/>\n                        }\n                    </div>\n                </div>\n\n                <div className={ cn('sub_events') }>\n                    { sub_events.map((value: any) => {\n                        return <SubEventRow key={ value.ids } event={ value }/>\n                    }) }\n                </div>\n\n                <div className={ cn('event_note') }>\n                    { note }\n                </div>\n            </div>\n        </div>\n    );\n});\n","import differenceInWeeks from 'date-fns/differenceInWeeks'\nimport add from 'date-fns/add'\n\nexport function getActualEvent(event:any) {\n    const now = new Date().getTime();\n    let actualEvent = event;\n    let eventTime, newDate;\n\n    if (event.event) {\n        eventTime = new Date(event.event.timer).getTime();\n    } else {\n        eventTime = new Date(event.timer).getTime();\n    }\n\n\n    if (actualEvent.repeatable !== '' && eventTime <= now) {\n        const weeks = differenceInWeeks(eventTime, now) * -1 + 1;\n        newDate = add(eventTime, {weeks});\n\n        if (actualEvent.event) {\n            actualEvent.event.timer = newDate;\n        } else {\n            actualEvent.timer = newDate;\n        }\n    }\n\n    const timer = actualEvent.event ? actualEvent.event.timer : actualEvent.timer;\n    const newDateSeconds = new Date(timer).getTime();\n    const expiring = newDateSeconds - now <= 1000 * 60 * 60 * 24;\n\n    if (actualEvent.event) {\n        actualEvent.event.expiring = expiring;\n    } else {\n        actualEvent.expiring = expiring;\n    }\n\n    return actualEvent;\n}\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport Events  from '../../constants/events.json';\nimport { EventRow } from '../../components/event-row/event-row';\nimport { getActualEvent } from '../../utils/getActualEvent';\n\nimport './timers-page.scss';\n\nconst cn = createCn('timers-page');\nconst now = new Date().getTime();\n\nexport const TimersPage = React.memo(() => {\n    const [actualEvents, setActualEvents] = useState([]);\n\n    useEffect(() => {\n        let actualEvents = [...Events];\n        for (let i = 0; i < Events.length; i++) {\n            actualEvents[i] = getActualEvent(actualEvents[i]);\n            let subEvents:any = actualEvents[i].sub_events;\n            console.log(subEvents.length);\n\n            if (subEvents.length > 0) {\n                let actualSubEvents:any = [];\n                for (let i = 0; i < subEvents.length; i++) {\n                    const eventTimer = new Date(subEvents[i].timer).getTime();\n                    if (eventTimer > now || subEvents[i].repeatable !== '') {\n                        actualSubEvents.push(getActualEvent(subEvents[i]));\n                    }\n                }\n                actualEvents[i].sub_events = actualSubEvents;\n            }\n        }\n        // @ts-ignore\n        setActualEvents(actualEvents);\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            { actualEvents.map((value: any) => {\n                console.log(value.event);\n                const eventTimer = new Date(value.event.timer).getTime();\n                if (eventTimer > now) {\n                    return <EventRow key={ value.ids } event={ value }/>\n                }\n\n                return null;\n            }) }\n        </div>\n    );\n});\n","type Typed<T> = { type: T };\n\n/**\n * Метод для создания action-creatorа по переданным параметрам.\n * Полученный action-creator может быть использован как в контейнерах, так и в редьюсерах для типизации полученного экшена.\n * Значение типа экшена будет содержаться в поле type сгенерированного action-creatorа\n * @param type Тип возвращаемого экшена. Формируется по принципу \"ИМЯ_ДОМЕННОЙ_ОБЛАСТИ / названиеЭкшена\"\n * @param actionCreator Метод для формирования данных в экшене\n */\nexport function createAction<\n    Type extends string,\n    ActionCreator extends (...args: any[]) => Record<string, any> // eslint-disable-line\n    // @typescript-eslint/no-explicit-any\n    >(type: Type, actionCreator: ActionCreator = (() => ({})) as ActionCreator) {\n    type Arg = Parameters<ActionCreator>;\n    type Ret = ReturnType<ActionCreator>;\n    const result = (...args: Arg) => ({\n        type,\n        ...(actionCreator && (actionCreator(...args) as Ret)),\n    });\n\n    ((result as unknown) as ActionCreator & Typed<Type>).type = type;\n\n    return result as Typed<Type> & typeof result;\n}\n","import { createAction } from '../utils/createAction';\n\nexport const changeValue = createAction('GLOBAL_SEARCH / changeValue', (id: string, value: string) => ({\n    id, value\n}));\n\nexport const countOvr = createAction('GLOBAL_SEARCH / countOvr', () => ({}));\nexport const setTotal = createAction('GLOBAL_SEARCH / setTotal', (total: number) => ({ total }));\nexport const setNeeds = createAction('GLOBAL_SEARCH / setNeeds', (needs: any) => ({ needs }));\nexport const setResults = createAction('GLOBAL_SEARCH / setResults', (results: any) => ({ results }));\n","import { createSelector } from 'reselect';\n\nimport { AppStoreState } from './types';\n\nexport const calculatorSelector = (state: AppStoreState) => state.calculator;\n\nexport const calculatorResultSelector = (state: AppStoreState) => calculatorSelector(state).results;\nexport const totalOvrSelector = (state: AppStoreState) => calculatorSelector(state).total;\nexport const needsSelector = (state: AppStoreState) => calculatorSelector(state).needs;\n\nexport const customGlobalSearchSelector = createSelector(calculatorResultSelector, (result) => result);\n","// const decimalAdjust = (type: string, value: any, exp: any) => {\n//     if (typeof exp === 'undefined' || +exp === 0) {\n//         return Math[type](value);\n//     }\n//     value = +value;\n//     exp = +exp;\n//     if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n//         return NaN;\n//     }\n//     value = value.toString().split('e');\n//     value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n//     value = value.toString().split('e');\n//     return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n// }\n//\n// export function round10(value:any, exp:any) {\n//     return decimalAdjust('round', value, exp);\n// }\n//\n// export function ceil10(value:any, exp:any) {\n//     return decimalAdjust('ceil', value, exp);\n// }\n\nexport function countNeed(need: number, ranks?: number) {\n    let count = need;\n    if (ranks) {\n        count = count - ranks;\n    }\n    const roundedUp = Math.ceil(count / 11);\n    const avg = count / 11;\n\n    console.log(count, roundedUp, avg);\n\n    const needMore = (roundedUp - avg + 0.1 ) * 11;\n    return Math.round(needMore);\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { AppStoreState } from './types';\nimport { calculatorSelector } from './selectors';\n\nimport * as actionCreators from './action-creators';\nimport { CalculatorStateActionsType } from './reducers';\nimport { countNeed } from '../utils/countNeed';\n\nexport function onCount(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const results = calculatorSelector(state).results;\n        console.log(results);\n        let ovr = 0;\n        let ranks = 0;\n        let boosts = 0;\n\n        // const test:any = {\n        // boost1: \"6\",\n        //     boost2: \"7\",\n        //     boost3: \"6\",\n        //     boost4: \"6\",\n        //     boost5: \"6\",\n        //     boost6: \"6\",\n        //     boost7: \"6\",\n        //     boost8: \"7\",\n        //     boost9: \"6\",\n        //     boost10: \"7\",\n        //     boost11: \"6\",\n        //     ovr1: \"88\",\n        //     ovr2: \"89\",\n        //     ovr3: \"93\",\n        //     ovr4: \"87\",\n        //     ovr5: \"87\",\n        //     ovr6: \"88\",\n        //     ovr7: \"88\",\n        //     ovr8: \"89\",\n        //     ovr9: \"90\",\n        //     ovr10: \"89\",\n        //     ovr11: \"88\",\n        //     rank1: \"5\",\n        //     rank2: \"5\",\n        //     rank3: \"5\",\n        //     rank4: \"5\",\n        //     rank5: \"5\",\n        //     rank6: \"5\",\n        //     rank7: \"5\",\n        //     rank8: \"5\",\n        //     rank9: \"5\",\n        //     rank10: \"10\",\n        //     rank11: \"5\"\n        // }\n\n        for (let i = 1; i <= Object.keys(results).length; i++) {\n            if (results['ovr' + i]) {\n                ovr += parseInt(results['ovr' + i]);\n            }\n            if (results['rank' + i]) {\n                ranks += Math.round(parseInt(results['rank' + i]) / 5);\n            }\n            if (results['boost' + i]) {\n                boosts += parseInt(results['boost' + i]);\n            }\n        }\n        const avgRanks = Math.ceil(ranks / 11);\n        const avgBoosts = Math.ceil(boosts / 11);\n        const avgOvr = Math.ceil((ovr - ranks) / 11);\n\n        const total = avgRanks + avgBoosts + avgOvr;\n\n        dispatch(actionCreators.setTotal(total));\n        dispatch(actionCreators.setNeeds({\n            ranks: countNeed(ranks),\n            boosts: countNeed(boosts),\n            ovr: countNeed(ovr, ranks)\n        }));\n    };\n}\n\nexport function onSave(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    console.log('onSave');\n    return async (dispatch, getState) => {\n        const state = getState();\n        const results = calculatorSelector(state).results;\n        console.log(dispatch);\n        console.log(results);\n\n        localStorage.setItem('results', JSON.stringify(results));\n    };\n}\n\nexport function onLoad(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    console.log('onCount');\n    return async (dispatch) => {\n        if (localStorage.getItem('results')) {\n            const resultsSource = localStorage.getItem('results') || '';\n            const results = JSON.parse(resultsSource);\n            console.log(results);\n            dispatch(actionCreators.setResults(results));\n            dispatch(onCount());\n        }\n    };\n}\n\n// export function getHistory(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n//     return async (dispatch) => {\n//         await fetchers\n//             .getHistory({\n//                 count: 5,\n//             })\n//             .then((data: any) => {\n//                 dispatch(actionCreators.getHistorySuccess(data));\n//             })\n//             .catch(() => {\n//                 dispatch(actionCreators.getHistoryFailure());\n//             });\n//     };\n// }\n","import React, { useCallback, useEffect } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { useDispatch, useSelector } from 'react-redux';\n// import Events  from '../../constants/events.json';\n// import { EventRow } from '../../components/event-row/event-row';\n// import { getActualEvent } from '../../utils/getActualEvent';\nimport './calculator-page.scss';\nimport * as actionCreators from '../../redux/action-creators';\nimport * as thunks from '../../redux/actions';\nimport { calculatorResultSelector, needsSelector, totalOvrSelector } from '../../redux/selectors';\n\nconst cn = createCn('calculator-page');\n// const now = new Date().getTime();\n\nexport const CalculatorPage = React.memo(() => {\n    // const [actualEvents, setActualEvents] = useState([]);\n    const dispatch = useDispatch();\n    const results = useSelector(calculatorResultSelector);\n    const total = useSelector(totalOvrSelector);\n    const needs = useSelector(needsSelector);\n\n    const onChangeValue = useCallback(\n        (id, e) => {\n            console.log(id, e.target.value);\n            dispatch(actionCreators.changeValue(id, e.target.value));\n        },\n        [dispatch]\n    );\n\n    const onCount = useCallback(\n        () => {\n            dispatch(thunks.onCount());\n        },\n        [dispatch]\n    );\n\n    const onSave = useCallback(\n        () => {\n            dispatch(thunks.onSave());\n        },\n        [dispatch]\n    );\n\n    const onLoad = useCallback(\n        () => {\n            dispatch(thunks.onLoad());\n        },\n        [dispatch]\n    );\n\n    useEffect(() => {\n        console.log(results);\n        // let actualEvents = [...Events];\n        // for (let i = 0; i < Events.length; i++) {\n        //     actualEvents[i] = getActualEvent(actualEvents[i]);\n        //     let subEvents = actualEvents[i].sub_events;\n        //\n        //     let actualSubEvents = [];\n        //     for (let i = 0; i < subEvents.length; i++) {\n        //         const eventTimer = new Date(subEvents[i].timer).getTime();\n        //         if (eventTimer > now || subEvents[i].repeatable !== '') {\n        //             actualSubEvents.push(getActualEvent(subEvents[i]));\n        //         }\n        //     }\n        //     actualEvents[i].sub_events = actualSubEvents;\n        // }\n        // // @ts-ignore\n        // setActualEvents(actualEvents);\n    }, [results]);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('data') }>\n                <div className={ cn('total') }>Total ovr: { total }</div>\n                <div className={cn('buttons')}>\n                    <button className={ cn('button') } onClick={ onCount }>Count</button>\n                    <button className={ cn('button_save') } onClick={ onSave }>Save</button>\n                    <button className={ cn('button_load') } onClick={ onLoad }>Load</button>\n                </div>\n            </div>\n            <div className={cn('need-content')}>\n                <div className={ cn('need') }>Next OVR:</div>\n                <table className={cn('need-table')}>\n                    <tr>\n                        <td>OVR:</td>\n                        <td>{ needs.ovr }</td>\n                    </tr>\n                    <tr>\n                        <td>Ranks:</td>\n                        <td>{ needs.ranks }</td>\n                    </tr>\n                    <tr>\n                        <td>Boosts:</td>\n                        <td>{ needs.boosts }</td>\n                    </tr>\n                </table>\n            </div>\n            <div className={cn(\"field\")}>\n                { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((key) => (\n                    <div className={cn(\"position position_\" + key)}>\n                        { ['boost', 'ovr', 'rank'].map((sub) => (\n                            <div className={cn(sub)}>\n                                <input\n                                    id={ sub + key }\n                                    onChange={ (e) => onChangeValue(sub + key, e) }\n                                    value={results[sub+key]}\n                                />\n                            </div>\n                        )) }\n                    </div>\n                )) }\n            </div>\n        </div>\n    );\n});\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './group.scss';\n\nconst cn = createCn('group');\n\ntype OwnProps = Partial<{\n    group: any;\n}>\n\nexport const Group = React.memo<OwnProps>((props) => {\n    const { name, leagues } = props.group;\n    const eventImg = '/fmt/img/groups/' + name.replace(/\\s/g, '').toLowerCase() + '.png';\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }>\n                <img src={ eventImg } alt=\"\"/>\n            </div>\n            <div className={ cn('content') }>\n                <div className={ cn('header') }>\n\n                    <div className={ cn('name') }>\n                        { name }\n                    </div>\n                </div>\n\n                <div className={ cn('leagues') }>\n                    { leagues.map((league: string) => {\n                        return <div className={ cn('league') }>{ league }</div>\n                    }) }\n                </div>\n            </div>\n        </div>\n    );\n});\n","export const Groups = [\n    {\n        name: 'England',\n        leagues: [\n            'Premier League',\n            'EFL Championship',\n            'EFL League 1',\n            'EFL League 2'\n        ]\n    },\n    {\n        name: 'France',\n        leagues: [\n            'Ligue 1 Uber Eats',\n            'Ligue 2 BKT'\n        ]\n    },\n    {\n        name: 'Italy',\n        leagues: [\n            'Serie A TIM',\n            'Calcio B'\n        ]\n    },\n    {\n        name: 'Germany',\n        leagues: [\n            'Bundesliga',\n            'Bundesliga 2',\n            '3. Liga'\n        ]\n    },\n    {\n        name: 'Spain',\n        leagues: [\n            'LaLiga Santander',\n            'LaLiga Smartbank'\n        ]\n    },\n    {\n        name: 'Western Europe',\n        leagues: [\n            'Liga NOS (Portugal)',\n            'Eredivisie (Netherlands)',\n            '1A Pro League (Belgium)',\n            'Scottish Prem (Scotland)',\n            'SSE Airtricity Lge (Ireland)'\n        ]\n    },\n    {\n        name: 'Eastern Europe',\n        leagues: [\n            'RSL (Switzerland)',\n            'O. Bundesliga (Austria)',\n            '3F Superliga (Denmark)',\n            'Eliteserien (Norway)',\n            'Allsvenskan (Sweden)',\n            'PKO Ektstraklasa (Poland)',\n            'Liga I (Romania)',\n            'Super Lig (Turkey)',\n            'Finnliga (Finland)',\n            'Ceska Liga (Czech Republic)',\n            'League of Russia (Russia)',\n            'Ukrayina Liha (Ukraine)',\n            'Liga Hrvatska (Croatia)',\n            'Hellas Liga (Greece)'\n        ]\n    },\n    {\n        name: 'Rest of World',\n        leagues: [\n            'MLS (USA/Canada)',\n            'Liga BBVA MX (Mexico)',\n            'LPF (Argentina)',\n            'CSL (China)',\n            'K-League 1 (South Korea)',\n            'A-League (Australia/New Zealand)',\n            'Hero ISL (India)',\n            'MBS Pro League (Saudi Arabia)',\n            'United Emirates League (UAE)',\n            'South African FL (South Africa)'\n        ]\n    }\n];\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Group } from '../../components/group/group';\nimport { Groups } from '../../constants/groups'\n\nimport './chemistry-groups.scss';\n\nconst cn = createCn('chemistry-groups');\n\nexport const ChemistryGroups = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <div className={ cn('content') }>\n                {Groups.map((group) => {\n                    return <Group group={group} />\n                })}\n            </div>\n        </div>\n    );\n});\n","export const LOG = [\n    {\n        version: '2.4.2',\n        changes: [\n            'Переделанная верстка калькулятора'\n        ]\n    },\n    {\n        version: '2.3.2',\n        changes: [\n            'Релиз для Сереги',\n            'Поправлена навигация, любую вкладку можно открыть по прямой ссылке'\n        ]\n    },\n    {\n        version: '2.2.2',\n        changes: [\n            'Сохранение и загрузка'\n        ]\n    },\n    {\n        version: '2.1.2',\n        changes: [\n            'Версия посвященная Лизе',\n            'Добавлены актуальные события'\n        ]\n    }\n];\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport './changelog-page.scss';\nimport { LOG } from './constants';\n\nconst cn = createCn('changelog-page');\n\nexport const ChangelogPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <div className={cn(\"version\")}>\n                Changelog\n            </div>\n            <div className={cn(\"changes\")}>\n                {LOG.map((log) => {\n                    return <div className={cn('row')}>\n                        <div className={cn('small-version')}>\n                            {\n                                log.version\n                            }\n                        </div>\n                        <div className={cn('description')}>\n                            <ul>\n                                {log.changes.map((change) => {\n                                    return <li>- {change}</li>;\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                })}\n\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect,\n    useState\n} from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport { TimersPage } from './timers-page/timers-page';\nimport { CalculatorPage } from './calculator-page/calculator-page';\nimport { ChemistryGroups } from './chemistry-groups/chemistry-groups';\nimport { ChangelogPage } from './changelog-page/changelog-page';\n\nexport const CustomRouter = React.memo(() => {\n    const [route, setRoute] = useState(<CalculatorPage/>);\n    const location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const {router} = values;\n        console.log(router);\n\n        switch (router) {\n            case 'chemistry':\n                setRoute(<ChemistryGroups/>);\n                break;\n            case 'timers':\n                setRoute(<TimersPage/>);\n                break;\n            case 'calculator':\n                setRoute(<CalculatorPage/>);\n                break;\n            case 'changelog':\n                setRoute(<ChangelogPage/>);\n                break;\n            default:\n                setRoute(<CalculatorPage/>);\n        }\n    }, [location]);\n\n    return (\n        <React.Fragment>\n            {route}\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Logo } from './components/logo/logo';\nimport { Navbar } from './components/navbar/navbar';\nimport { NavLink } from 'react-router-dom'\nimport { createCn } from 'bem-react-classname';\n\nimport './App.scss';\nimport { CustomRouter } from './containers/custom-router';\n\nconst cn = createCn('App');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n            <div className={ cn('header') }>\n                <div className='inner'>\n                    <NavLink exact={ true } to={'/fmt?'} ><Logo/></NavLink>\n                    <Navbar/>\n                </div>\n            </div>\n            <div className={ cn('content') }>\n                <div className='inner'>\n                    <Switch>\n                        <Route path={ '/fmt' }>\n                            <CustomRouter/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    combineReducers, Reducer, ReducersMapObject, Store,\n} from 'redux';\n\nexport class ReducerManager {\n    reducers: ReducersMapObject;\n\n    store: Store;\n\n    constructor(initialReducers: ReducersMapObject, store: Store) {\n        this.reducers = { ...initialReducers };\n        this.store = store;\n    }\n\n    add(key: string, reducer: Reducer) {\n        if (!key || this.reducers[key]) {\n            return;\n        }\n\n        this.reducers[key] = reducer;\n        this.store?.replaceReducer(combineReducers(this.reducers));\n    }\n\n    remove(key: string) {\n        if (!key || !this.reducers[key]) {\n            return;\n        }\n\n        delete this.reducers[key];\n\n        this.store?.replaceReducer(combineReducers(this.reducers));\n    }\n}\n","import { ActionType } from './types';\nimport * as actionCreators from './action-creators';\n\nexport type CalculatorStateActionsType = ActionType<typeof actionCreators>;\n\nexport type CalculatorState = {\n    results: any,\n    total: number,\n    needs: any\n};\n\nconst initialState: CalculatorState = {\n    results: {},\n    total: 0,\n    needs: {\n        ranks: 0,\n        boosts: 0,\n        ovr: 0\n    }\n};\n\nexport function calculatorReducer(\n    state: CalculatorState = initialState,\n    action: CalculatorStateActionsType\n): CalculatorState {\n    switch (action.type) {\n        case actionCreators.changeValue.type:\n            return {\n                ...state,\n                results: {...state.results, [action.id]: action.value}\n            };\n        case actionCreators.setTotal.type:\n            return {\n                ...state,\n                total: action.total\n            };\n        case actionCreators.setResults.type:\n            return {\n                ...state,\n                results: action.results\n            };\n        case actionCreators.setNeeds.type:\n            return {\n                ...state,\n                needs: action.needs\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    applyMiddleware, combineReducers, compose, createStore, PreloadedState, ReducersMapObject,\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { ReducerManager } from './reducer-manager';\nimport { AppStore, AppStoreState } from './types';\nimport { calculatorReducer } from './reducers';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; // eslint-disable-line no-underscore-dangle\n\nfunction configureStore(\n    staticReducers: ReducersMapObject<Partial<AppStoreState>>,\n    initialState?: PreloadedState<Partial<AppStoreState>>,\n): AppStore {\n    const store: AppStore = createStore(\n        combineReducers(staticReducers),\n        initialState,\n        composeEnhancers(applyMiddleware(thunk)),\n    );\n\n    store.reducerManager = new ReducerManager(staticReducers, store);\n\n    return store;\n}\n\nexport const store = configureStore({\n    calculator: calculatorReducer,\n} as ReducersMapObject<Partial<AppStoreState>>);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}