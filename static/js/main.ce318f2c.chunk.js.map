{"version":3,"sources":["containers/events-page/events-page.tsx","constants/events.ts","components/event-duration/event-duration.tsx","components/sub-event-row/sub-event-row.tsx","components/event-row/event-row.tsx","utils/getActualEvent.ts","containers/timers-page/timers-page.tsx","components/group/group.tsx","constants/groups.ts","containers/chemistry-groups/chemistry-groups.tsx","components/logo/logo.tsx","components/navbar/navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cn","createCn","EventsPage","React","className","Events","ids","note","event","name","timer","repeatable","sub_events","addLeadingZero","number","add","withAdditional","EventDuration","memo","props","now","duration","useState","timeLeft","setTimeLeft","useEffect","diff","differenceInDays","interval","intervalToDuration","start","end","days","hours","minutes","seconds","Fragment","SubEventRow","expiring","Date","setNow","eventDate","setInterval","EventRow","eventImg","src","alt","map","value","getActualEvent","eventTime","newDate","getTime","actualEvent","weeks","differenceInWeeks","TimersPage","actualEvents","setActualEvents","i","length","subEvents","actualSubEvents","push","Group","group","leagues","replace","toLowerCase","league","Groups","ChemistryGroups","Logo","Navbar","exact","to","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce318f2c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './events-page.scss';\n\nconst cn = createCn('events-page');\n\nexport const EventsPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            Events\n        </div>\n    );\n});\n","export const Events = [\n    {\n        ids: 'summer',\n        note: '',\n        event: {\n            name: 'summer celebration',\n            timer: '2021-08-26T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n            {\n                repeatable: '',\n                name: 'Energy offer (coins)',\n                timer: '2021-08-12T22:00:00+03:00'\n            },\n            {\n                repeatable: '',\n                name: 'Roulette update',\n                timer: '2021-08-12T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'flashbacks',\n        note: '',\n        event: {\n            name: 'flashbacks memories',\n            timer: '2021-08-05T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n\n        ]\n    },\n    {\n        ids: 'toty',\n        note: '',\n        event: {\n            name: 'toty',\n            timer: '2021-02-11T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n            {\n                repeatable: '',\n                name: 'TOTY MID',\n                timer: '2021-01-27T22:00:00+03:00'\n            },\n            {\n                repeatable: '',\n                name: 'TOTY MID Energy Deadend',\n                timer: '2021-01-27T04:00:00+03:00'\n            },\n            {\n                repeatable: '',\n                name: 'TOTY DEF',\n                timer: '2021-01-29T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'marquee',\n        note: '',\n        event: {\n            name: 'marquee stars',\n            timer: '2021-01-26T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n\n        ]\n    },\n    {\n        ids: 'uel',\n        note: '',\n        event: {\n            name: 'UEFA Europa League',\n            timer: '2021-01-21T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n            {\n                repeatable: '',\n                name: 'Energy offer (coins)',\n                timer: '2021-01-21T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'leagues',\n        note: '',\n        repeatable: 'weekly',\n        event: {\n            name: 'League matchups',\n            timer: '2021-08-16T22:00:00+03:00'\n        },\n        sub_events: [\n            {\n                name: 'players update',\n                repeatable: 'monthly',\n                timer: '2021-09-20T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'icons',\n        note: 'Dont forget to play skill games',\n        repeatable: 'weekly',\n        event: {\n            name: 'icons strike',\n            timer: '2021-01-21T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'becks',\n        note: 'Dont forget to get Beckham points from ads',\n        repeatable: 'weekly',\n        event: {\n            name: 'beckham quests',\n            timer: '2021-01-07T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'rivals',\n        note: '',\n        repeatable: 'monthly',\n        event: {\n            name: 'division rivals',\n            timer: '2021-09-06T22:00:00+03:00'\n        },\n        sub_events: [\n            {\n                name: 'weekly update',\n                repeatable: 'weekly',\n                timer: '2021-01-27T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'starpass',\n        note: '',\n        repeatable: 'monthly',\n        event: {\n            name: 'starpass',\n            timer: '2021-02-24T22:00:00+03:00'\n        },\n        sub_events: [\n            {\n                repeatable: '',\n                name: 'players update',\n                timer: '2021-10-06T22:00:00+03:00'\n            }\n        ]\n    }\n];\n","import React, { useEffect, useState } from 'react';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport intervalToDuration from 'date-fns/intervalToDuration';\n\nimport './event-duration.scss';\n\ntype OwnProps = Partial<{\n    now: any;\n    duration: any;\n}>\n\nconst addLeadingZero = (number: number | undefined, add?: number) => {\n    if (!number || number === 0) {\n        return '00';\n    }\n    const withAdditional = add ? number + add : number;\n    return withAdditional < 10 ? '0' + withAdditional : withAdditional;\n};\n\nexport const EventDuration = React.memo<OwnProps>((props) => {\n    const { now, duration } = props;\n    const [timeLeft, setTimeLeft] = useState('');\n\n    useEffect(() => {\n        const diff = differenceInDays(duration, now);\n        const interval = intervalToDuration({\n            start: now,\n            end: duration\n        });\n        if (diff > 2) {\n            const days = diff + 1;\n            setTimeLeft(`${ days } days`);\n        }\n        else {\n            const days = interval.days && interval.days > 0 ? 24 : 0;\n            const hours = addLeadingZero(interval.hours, days);\n            const minutes = addLeadingZero(interval.minutes);\n            const seconds = addLeadingZero(interval.seconds);\n\n            setTimeLeft(`${ hours }:${ minutes }:${ seconds }`);\n        }\n    }, [now, duration])\n\n    return (\n        <React.Fragment>\n            { timeLeft }\n        </React.Fragment>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './sub-event-row.scss';\n\nconst cn = createCn('sub-event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const SubEventRow = React.memo<OwnProps>((props) => {\n    const { name, timer, expiring } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(timer);\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('name') }>{ name }</div>\n            <div className={ cn('timer', {expiring: expiring}) }>\n                <EventDuration now={ now } duration={ eventDate }/>\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { SubEventRow } from '../sub-event-row/sub-event-row';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './event-row.scss';\n\nconst cn = createCn('event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const EventRow = React.memo<OwnProps>((props) => {\n    const { ids, event, note, sub_events } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(event.timer);\n    const eventImg = '/fmt/img/programs/' + ids + '.png';\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }><img src={ eventImg } alt=\"\"/></div>\n            <div className={ cn('content') }>\n                <div className={ cn('main_event') }>\n                    <div className={ cn('name') }>{ event.name }</div>\n                    <div className={ cn('timer', {expiring: event.expiring}) }>\n                        <EventDuration now={ now } duration={ eventDate }/>\n                    </div>\n                </div>\n\n                <div className={ cn('sub_events') }>\n                    { sub_events.map((value: any) => {\n                        return <SubEventRow key={ value.ids } event={ value }/>\n                    }) }\n                </div>\n\n                <div className={ cn('event_note') }>\n                    { note }\n                </div>\n            </div>\n        </div>\n    );\n});\n","import differenceInWeeks from 'date-fns/differenceInWeeks'\nimport add from 'date-fns/add'\n\nexport function getActualEvent(event:any) {\n    const now = new Date().getTime();\n    let actualEvent = event;\n    let eventTime, newDate;\n\n    if (event.event) {\n        eventTime = new Date(event.event.timer).getTime();\n    } else {\n        eventTime = new Date(event.timer).getTime();\n    }\n\n\n    if (actualEvent.repeatable !== '' && eventTime <= now) {\n        const weeks = differenceInWeeks(eventTime, now) * -1 + 1;\n        newDate = add(eventTime, {weeks});\n\n        if (actualEvent.event) {\n            actualEvent.event.timer = newDate;\n        } else {\n            actualEvent.timer = newDate;\n        }\n    }\n\n    const timer = actualEvent.event ? actualEvent.event.timer : actualEvent.timer;\n    const newDateSeconds = new Date(timer).getTime();\n    const expiring = newDateSeconds - now <= 1000 * 60 * 60 * 24;\n\n    if (actualEvent.event) {\n        actualEvent.event.expiring = expiring;\n    } else {\n        actualEvent.expiring = expiring;\n    }\n\n    return actualEvent;\n}\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Events } from '../../constants/events';\nimport { EventRow } from '../../components/event-row/event-row';\nimport { getActualEvent } from '../../utils/getActualEvent';\n\nimport './timers-page.scss';\n\nconst cn = createCn('timers-page');\nconst now = new Date().getTime();\n\nexport const TimersPage = React.memo(() => {\n    const [actualEvents, setActualEvents] = useState([]);\n\n    useEffect(() => {\n        let actualEvents = [...Events];\n        for (let i = 0; i < Events.length; i++) {\n            actualEvents[i] = getActualEvent(actualEvents[i]);\n            let subEvents = actualEvents[i].sub_events;\n\n            let actualSubEvents = [];\n            for (let i = 0; i < subEvents.length; i++) {\n                const eventTimer = new Date(subEvents[i].timer).getTime();\n                if (eventTimer > now || subEvents[i].repeatable !== '') {\n                    actualSubEvents.push(getActualEvent(subEvents[i]));\n                }\n            }\n            actualEvents[i].sub_events = actualSubEvents;\n        }\n        // @ts-ignore\n        setActualEvents(actualEvents);\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            { actualEvents.map((value: any) => {\n                const eventTimer = new Date(value.event.timer).getTime();\n                if (eventTimer > now) {\n                    return <EventRow key={ value.ids } event={ value }/>\n                }\n\n                return null;\n            }) }\n        </div>\n    );\n});\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './group.scss';\n\nconst cn = createCn('group');\n\ntype OwnProps = Partial<{\n    group: any;\n}>\n\nexport const Group = React.memo<OwnProps>((props) => {\n    const { name, leagues } = props.group;\n    const eventImg = '/fmt/img/groups/' + name.replace(/\\s/g, '').toLowerCase() + '.png';\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('header') }>\n                <div className={ cn('img') }>\n                    <img src={ eventImg } alt=\"\"/>\n                </div>\n                <div className={ cn('name') }>\n                    { name }\n                </div>\n            </div>\n\n\n            <div className={ cn('leagues') }>\n                { leagues.map((league: string) => {\n                    return <div className={ cn('league') }>{ league }</div>\n                }) }\n            </div>\n        </div>\n    );\n});\n","export const Groups = [\n    {\n        name: 'England',\n        leagues: [\n            'Premier League',\n            'EFL Championship',\n            'EFL League 1',\n            'EFL League 2'\n        ]\n    },\n    {\n        name: 'France',\n        leagues: [\n            'Ligue 1 Uber Eats',\n            'Ligue 2 BKT'\n        ]\n    },\n    {\n        name: 'Italy',\n        leagues: [\n            'Serie A TIM',\n            'Calcio B'\n        ]\n    },\n    {\n        name: 'Germany',\n        leagues: [\n            'Bundesliga',\n            'Bundesliga 2',\n            '3. Liga'\n        ]\n    },\n    {\n        name: 'Spain',\n        leagues: [\n            'LaLiga Santander',\n            'LaLiga Smartbank'\n        ]\n    },\n    {\n        name: 'Western Europe',\n        leagues: [\n            'Liga NOS (Portugal)',\n            'Eredivisie (Netherlands)',\n            '1A Pro League (Belgium)',\n            'Scottish Prem (Scotland)',\n            'SSE Airtricity Lge (Ireland)'\n        ]\n    },\n    {\n        name: 'Eastern Europe',\n        leagues: [\n            'RSL (Switzerland)',\n            'O. Bundesliga (Austria)',\n            '3F Superliga (Denmark)',\n            'Eliteserien (Norway)',\n            'Allsvenskan (Sweden)',\n            'PKO Ektstraklasa (Poland)',\n            'Liga I (Romania)',\n            'Super Lig (Turkey)',\n            'Finnliga (Finland)',\n            'Ceska Liga (Czech Republic)',\n            'League of Russia (Russia)',\n            'Ukrayina Liha (Ukraine)',\n            'Liga Hrvatska (Croatia)',\n            'Hellas Liga (Greece)'\n        ]\n    },\n    {\n        name: 'Rest of World',\n        leagues: [\n            'MLS (USA/Canada)',\n            'Liga BBVA MX (Mexico)',\n            'LPF (Argentina)',\n            'CSL (China)',\n            'K-League 1 (South Korea)',\n            'A-League (Australia/New Zealand)',\n            'Hero ISL (India)',\n            'MBS Pro League (Saudi Arabia)',\n            'United Emirates League (UAE)',\n            'South African FL (South Africa)'\n        ]\n    }\n];\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Group } from '../../components/group/group';\nimport { Groups } from '../../constants/groups'\n\nimport './chemistry-groups.scss';\n\nconst cn = createCn('chemistry-groups');\n\nexport const ChemistryGroups = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <h1>\n                Regional Chemistry Groups\n            </h1>\n            <div className={ cn('content') }>\n                {Groups.map((group) => {\n                    return <Group group={group} />\n                })}\n            </div>\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './logo.scss';\n\nconst cn = createCn('logo');\n\nexport const Logo = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <img src=\"/fmt/img/logo.png\" alt=\"\" />\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { NavLink } from 'react-router-dom'\n\nimport './navbar.scss';\n\nconst cn = createCn('navbar');\n\nexport const Navbar = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <NavLink exact={ true } to={ '/fmt' }>Timers</NavLink>\n            <NavLink exact={ true } to={ '/fmt/chemistry' }>Chemistry Groups</NavLink>\n        </div>\n    );\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { EventsPage } from './containers/events-page/events-page';\nimport { TimersPage } from './containers/timers-page/timers-page';\nimport { ChemistryGroups } from './containers/chemistry-groups/chemistry-groups';\nimport { Logo } from './components/logo/logo';\nimport { Navbar } from './components/navbar/navbar';\nimport { NavLink } from 'react-router-dom'\nimport { createCn } from 'bem-react-classname';\n\nimport './App.scss';\n\nconst cn = createCn('App');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n            <div className={ cn('header') }>\n                <div className='inner'>\n                    <NavLink exact={ true } to={'/fmt'} ><Logo/></NavLink>\n                    <Navbar/>\n                </div>\n            </div>\n            <div className={ cn('content') }>\n                <div className='inner'>\n\n                        <Switch>\n                            <Route exact={ true } path={ '/fmt' }>\n                                <TimersPage/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/chemistry' }>\n                                <ChemistryGroups/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/events' }>\n                                <EventsPage/>\n                            </Route>\n                        </Switch>\n\n                </div>\n            </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}