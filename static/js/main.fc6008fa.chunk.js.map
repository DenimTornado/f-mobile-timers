{"version":3,"sources":["components/logo/logo.tsx","components/navbar/navbar.tsx","utils/addLeadingZero.ts","components/event-duration/event-duration.tsx","components/event-duration/event-start.tsx","components/event-duration/event-update.tsx","components/sub-event-row/sub-event-row.tsx","components/event-row/event-row.tsx","utils/getActualEvent.ts","containers/timers-page/timers-page.tsx","utils/createAction.ts","redux/action-creators.ts","redux/selectors.ts","utils/countNeed.ts","redux/actions.ts","redux/constants.ts","containers/calculator-page/rank-select/rank-select.tsx","containers/calculator-page/my-teams/my-teams.tsx","containers/calculator-page/calculator-page.tsx","utils/countBase.ts","components/group/group.tsx","constants/groups.ts","containers/chemistry-groups/chemistry-groups.tsx","containers/changelog-page/constants.ts","containers/changelog-page/changelog-page.tsx","containers/custom-router.tsx","App.tsx","reportWebVitals.ts","redux/reducer-manager.ts","redux/reducers.ts","redux/store.ts","index.tsx"],"names":["cn","createCn","Logo","React","className","src","alt","getActiveClass","currentRoute","route","Navbar","location","useLocation","router","queryString","parse","search","toString","activeClassName","to","exact","addLeadingZero","number","add","withAdditional","EventDuration","memo","props","now","duration","endDate","Date","interval","intervalToDuration","start","end","Fragment","time","days","Math","floor","hours","minutes","seconds","formatTime","differenceInHours","EventStart","startDate","EventUpdate","repeatable","repeatValue","parseInt","value","timeDiff","abs","type","nextRepeat","SubEventRow","event","useState","setNow","useEffect","setInterval","name","start_timer","expiring","end_timer","EventRow","eventImg","ids","sub_events","map","note","getActualEvent","getTime","actualEvent","newDateSeconds","starting","stimer","timer","date","addType","nextUpdate","valueNumber","update_timer","localStorage","setItem","JSON","stringify","Events","TimersPage","actualEvents","setActualEvents","i","length","subEvents","actualSubEvents","push","filteredEvents","filter","split","Number","year","month","day","createAction","actionCreator","result","changeValue","id","setTotal","total","setNeeds","needs","setResults","results","setScheme","scheme","setTeams","teams","calculatorSelector","state","calculator","calculatorResultSelector","teamsSelector","totalOvrSelector","needsSelector","schemeSelector","createSelector","countNeed","need","ranks","sum","targetSum","ceil","diff","round","onCount","dispatch","getState","a","ovr","boosts","Object","keys","avgRanks","avgBoosts","avgOvr","actionCreators","onSaveTeam","_","getItem","teamsObject","team","onLoad","resultsSource","SCHEMES","RankSelect","useSelector","useDispatch","componentRef","useRef","visible","setVisible","handleClickOutside","useCallback","current","contains","target","onRankClick","onStoneClick","key","thunks","document","addEventListener","removeEventListener","ref","onClick","isEmptyObject","obj","MyTeams","options","console","log","onSave","lowercaseId","replace","toLowerCase","placeholder","item","CalculatorPage","curScheme","setCurScheme","onChangeValue","e","onSelect","onChange","sch","selected","hidden","rank","master","emerald","saphire","ametyst","ruby","ember","sub","Group","group","leagues","league","Groups","ChemistryGroups","LOG","version","changes","ChangelogPage","change","CustomRouter","setRoute","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReducerManager","initialReducers","store","reducers","this","reducer","replaceReducer","combineReducers","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","staticReducers","createStore","applyMiddleware","thunk","reducerManager","configureStore","action","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fc6008fa.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './logo.scss';\n\nconst cn = createCn('logo');\n\nexport const Logo = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <img src=\"/f-mobile-timers/img/logo.png\" alt=\"\" />\n        </div>\n    );\n});\n","import * as React from 'react';\nimport queryString from 'query-string';\nimport { createCn } from 'bem-react-classname';\nimport { NavLink, useLocation } from 'react-router-dom'\n\nimport './navbar.scss';\n\nconst cn = createCn('navbar');\n\nfunction getActiveClass(currentRoute:string, route:string) {\n    return currentRoute === route ? 'active' : ''\n}\n\nexport const Navbar = React.memo(() => {\n    const location = useLocation();\n    const values = queryString.parse(location.search);\n    let router = values.router?.toString() || '';\n\n    return (\n        <div className={ cn() }>\n            <NavLink activeClassName={getActiveClass(router, 'calculator')} to={ '/f-mobile-timers?router=calculator' }>OVR Calculator</NavLink>\n            <NavLink activeClassName={getActiveClass(router, 'timers')} to={ '/f-mobile-timers?router=timers' }>Timers</NavLink>\n            {/*<NavLink activeClassName={getActiveClass(router, 'chemistry')} to={ '/fmt?router=chemistry' }>Chemistry Groups</NavLink>*/}\n            <NavLink activeClassName={getActiveClass(router, 'changelog')} exact={ true } to={ '/f-mobile-timers?router=changelog' }>Changelog</NavLink>\n        </div>\n    );\n});\n","export function addLeadingZero(number: number | undefined, add?: number) {\n    if (typeof number === 'undefined' || number === 0 && !add) {\n        return '00';\n    }\n    const withAdditional = add ? number + add : number;\n    return withAdditional < 10 ? '0' + withAdditional : withAdditional;\n}\n","import React from 'react';\nimport intervalToDuration from 'date-fns/intervalToDuration';\nimport { differenceInHours } from 'date-fns';\nimport { addLeadingZero } from '../../utils/addLeadingZero';\n\nimport './event-duration.scss';\n\ntype OwnProps = Partial<{\n    now: any;\n    duration: any;\n}>\n\nexport const EventDuration = React.memo<OwnProps>((props) => {\n    const { now, duration} = props;\n    const endDate = new Date(duration);\n    const interval = intervalToDuration({\n        start: now,\n        end: endDate\n    });\n\n    const nextRepeat = () => {\n        return differenceInHours(endDate, now);\n    };\n\n    const formatTime = (time: any) => {\n        const days = Math.floor(time / 24) + 1;\n\n        if (time < 0) {\n            return '';\n        } else if (days < 2) {\n            const days = interval.days && interval.days > 0 ? 24 : 0;\n            const hours = addLeadingZero(interval.hours, days);\n            const minutes = addLeadingZero(interval.minutes);\n            const seconds = addLeadingZero(interval.seconds);\n\n            return `${ hours }:${ minutes }:${ seconds }`;\n        }\n        else {\n            return `${ days } Days`;\n        }\n    };\n\n\n    return (\n        <React.Fragment>\n            { formatTime(nextRepeat()) }\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { differenceInHours } from 'date-fns';\n\nimport './event-duration.scss';\nimport intervalToDuration from 'date-fns/intervalToDuration';\nimport { addLeadingZero } from '../../utils/addLeadingZero';\n\ntype OwnProps = Partial<{\n    now: any;\n    start: any;\n}>\n\n\n\nexport const EventStart = React.memo<OwnProps>((props) => {\n    const { now, start } = props;\n    const startDate = new Date(start);\n    const interval = intervalToDuration({\n        start: startDate,\n        end: now\n    });\n\n    const nextRepeat = () => {\n        return differenceInHours(startDate, now);\n    };\n\n    const formatTime = (time: any) => {\n        const days = Math.floor(time / 24) + 1;\n\n        if (time < 0) {\n            return '';\n        } else if (days < 2) {\n            const days = interval.days && interval.days > 0 ? 24 : 0;\n            const hours = addLeadingZero(interval.hours, days);\n            const minutes = addLeadingZero(interval.minutes);\n            const seconds = addLeadingZero(interval.seconds);\n\n            return `${ hours }:${ minutes }:${ seconds }`;\n        }\n        else {\n            return `${ days } Days`;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            { formatTime(nextRepeat()) }\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { differenceInHours } from 'date-fns';\n\nimport './event-duration.scss';\nimport intervalToDuration from 'date-fns/intervalToDuration';\nimport { addLeadingZero } from '../../utils/addLeadingZero';\n\ntype OwnProps = Partial<{\n    now: any;\n    start: any;\n    repeatable: any;\n}>\n\nexport const EventUpdate = React.memo<OwnProps>((props) => {\n    const { now, repeatable, start } = props;\n    const startDate = new Date(start);\n    const repeatValue = parseInt(repeatable.value);\n    const interval = intervalToDuration({\n        start: startDate,\n        end: now\n    });\n\n\n    const nextRepeat = () => {\n        const timeDiff = Math.abs(differenceInHours(startDate, now));\n        return repeatable.type === 'd'\n            ? repeatValue * 24 - (timeDiff % (repeatValue * 24))\n            : repeatValue - (timeDiff % (repeatValue));\n    };\n\n    const formatTime = (time: any) => {\n        const days = Math.floor(time / 24) + 1;\n\n        if (days < 2) {\n            const days = interval.days && interval.days > 0 ? 24 : 0;\n            const hours = addLeadingZero(interval.hours, days);\n            const minutes = addLeadingZero(interval.minutes);\n            const seconds = addLeadingZero(interval.seconds);\n\n            return `${ hours }:${ minutes }:${ seconds }`;\n        }\n        else {\n            return `${ days } Days`;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            { formatTime(nextRepeat()) }\n        </React.Fragment>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { EventDuration } from '../event-duration/event-duration';\nimport { EventStart } from '../event-duration/event-start';\nimport { EventUpdate } from '../event-duration/event-update';\n\nimport './sub-event-row.scss';\n\nconst cn = createCn('sub-event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const SubEventRow = React.memo<OwnProps>((props) => {\n    const { event } = props;\n    const [now, setNow] = useState(new Date());\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now);\n        }, 5000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('name') }>{ event.name }</div>\n            <div className={ cn('update') }>\n                { event.start_timer &&\n                    <EventStart now={ now } start={ event.start_timer }/>\n                }\n            </div>\n            <div className={ cn('timer', { expiring: event.expiring }) }>\n                { event.end_timer &&\n                    <EventDuration now={ now } duration={ event.end_timer }/>\n                }\n            </div>\n            <div className={ cn('update') }>\n                { event.repeatable?.value &&\n                    <EventUpdate now={ now } repeatable={ event.repeatable } start={ event.start_timer }/>\n                }\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { SubEventRow } from '../sub-event-row/sub-event-row';\nimport { EventDuration } from '../event-duration/event-duration';\nimport { EventStart } from '../event-duration/event-start';\nimport { EventUpdate } from '../event-duration/event-update';\n\nimport './event-row.scss';\n\nconst cn = createCn('event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const EventRow = React.memo<OwnProps>((props) => {\n    const { event } = props;\n    const [now, setNow] = useState(new Date());\n    const eventImg = '/f-mobile-timers/img/programs/' + event.ids + '.png';\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }><img src={ eventImg } alt=\"\"/></div>\n            <div className={ cn('content') }>\n                <div className={ cn('main_event') }>\n                    <div className={ cn('name') }>{ event.name }</div>\n                    <div className={ cn('update') }>\n                        { event.start_timer ?\n                            <EventStart now={ now } start={ event.start_timer } /> : ''\n                        }\n                    </div>\n                    <div className={ cn('timer', { expiring: event.expiring }) }>\n                        { event.end_timer ?\n                            <EventDuration now={ now } duration={ event.end_timer }/> : ''\n                        }\n                    </div>\n                    <div className={ cn('update') }>\n                        { event.repeatable?.value ?\n                            <EventUpdate now={ now } repeatable={ event.repeatable } start={ event.start_timer } /> : ''\n                        }\n                    </div>\n                </div>\n\n                <div className={ cn('sub_events') }>\n                    { event.sub_events.map((value: any) => {\n                        return <SubEventRow event={ value }/>\n                    }) }\n                </div>\n\n                <div className={ cn('event_note') }>\n                    { event.note }\n                </div>\n            </div>\n        </div>\n    );\n});\n","import add from 'date-fns/add'\n\nexport function getActualEvent(event: any) {\n    const now = new Date().getTime();\n    let actualEvent = event;\n    actualEvent.expiring = false;\n\n    if (actualEvent.start_timer) {\n        const start = actualEvent.start_timer;\n        const newDateSeconds = new Date(start).getTime();\n        actualEvent.starting = newDateSeconds - now <= 1000 * 60 * 60 * 24;\n        actualEvent.stimer = newDateSeconds;\n    }\n\n    if (actualEvent.end_timer) {\n        const end = actualEvent.end_timer;\n        const newDateSeconds = new Date(end).getTime();\n        actualEvent.expiring = newDateSeconds - now <= 1000 * 60 * 60 * 24;\n        actualEvent.timer = newDateSeconds;\n    }\n\n    if (actualEvent?.repeatable?.date) {\n        const { date, type, value } = actualEvent?.repeatable;\n        const dateObj = new Date(date);\n        //Default type is 'd' for days\n        let addType = 'days';\n        let nextUpdate = dateObj;\n        const valueNumber = value;\n\n        if (type === 'h') {\n            addType = 'hours'\n        }\n\n        while (nextUpdate.getTime() < now) {\n            nextUpdate = add(nextUpdate, {\n                [addType]: valueNumber\n            });\n        }\n\n        actualEvent.update_timer =  new Date(nextUpdate).getTime();\n    }\n\n    return actualEvent;\n}\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport Events  from '../../constants/events.json';\nimport { EventRow } from '../../components/event-row/event-row';\nimport { getActualEvent } from '../../utils/getActualEvent';\n\nimport './timers-page.scss';\n\nlocalStorage.setItem('evts', JSON.stringify(Events))\n\nconst cn = createCn('timers-page');\nconst now = new Date().getTime();\n\nexport const TimersPage = React.memo(() => {\n    const [actualEvents, setActualEvents] = useState([]);\n\n    useEffect(() => {\n        let actualEvents = Events;\n        for (let i = 0; i < Events.length; i++) {\n            actualEvents[i] = getActualEvent(actualEvents[i]);\n            let subEvents:any = actualEvents[i].sub_events;\n\n            if (subEvents.length > 0) {\n                let actualSubEvents:any = [];\n                for (let i = 0; i < subEvents.length; i++) {\n                    if (subEvents[i].end_timer) {\n                        const eventTimer = new Date(subEvents[i].end_timer).getTime();\n                        if (eventTimer > now) {\n                            actualSubEvents.push(getActualEvent(subEvents[i]));\n                        }\n                    } else {\n                        actualSubEvents.push(getActualEvent(subEvents[i]));\n                    }\n                }\n                actualEvents[i].sub_events = actualSubEvents;\n            }\n        }\n\n        const filteredEvents = actualEvents.filter((event) => {\n            if (event.end_timer) {\n                const dateString = event.end_timer;\n                const [date, time] = dateString.split('T');\n                const [year, month, day] = date.split('-').map(Number);\n                const [hours, minutes, seconds] = time.split(':').map(Number);\n                const dateObj = new Date(year, month - 1, day, hours, minutes, seconds);\n\n                return dateObj.getTime() > now;\n            }\n            return true;\n        });\n\n        // @ts-ignore\n        setActualEvents(filteredEvents);\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('header-row') }>\n                <div className={ cn('starting')}>Starting</div>\n                <div className={ cn('ending')}>Ending</div>\n                <div className={ cn('update') }>Update</div>\n            </div>\n            { actualEvents.map((value: any) => {\n                return <EventRow key={ value.ids } event={ value } />;\n            }) }\n        </div>\n    );\n});\n","type Typed<T> = { type: T };\n\n/**\n * Метод для создания action-creatorа по переданным параметрам.\n * Полученный action-creator может быть использован как в контейнерах, так и в редьюсерах для типизации полученного экшена.\n * Значение типа экшена будет содержаться в поле type сгенерированного action-creatorа\n * @param type Тип возвращаемого экшена. Формируется по принципу \"ИМЯ_ДОМЕННОЙ_ОБЛАСТИ / названиеЭкшена\"\n * @param actionCreator Метод для формирования данных в экшене\n */\nexport function createAction<\n    Type extends string,\n    ActionCreator extends (...args: any[]) => Record<string, any> // eslint-disable-line\n    // @typescript-eslint/no-explicit-any\n    >(type: Type, actionCreator: ActionCreator = (() => ({})) as ActionCreator) {\n    type Arg = Parameters<ActionCreator>;\n    type Ret = ReturnType<ActionCreator>;\n    const result = (...args: Arg) => ({\n        type,\n        ...(actionCreator && (actionCreator(...args) as Ret)),\n    });\n\n    ((result as unknown) as ActionCreator & Typed<Type>).type = type;\n\n    return result as Typed<Type> & typeof result;\n}\n","import { createAction } from '../utils/createAction';\n\nexport const changeValue = createAction('TIMERS_CALCULATOR / changeValue', (id: string, value: string) => ({\n    id, value\n}));\n\nexport const countOvr = createAction('TIMERS_CALCULATOR / countOvr', () => ({}));\nexport const setTotal = createAction('TIMERS_CALCULATOR / setTotal', (total: number) => ({ total }));\nexport const setNeeds = createAction('TIMERS_CALCULATOR / setNeeds', (needs: any) => ({ needs }));\nexport const setResults = createAction('TIMERS_CALCULATOR / setResults', (results: any) => ({ results }));\nexport const setScheme = createAction('TIMERS_CALCULATOR / setScheme', (scheme: string) => ({ scheme }));\nexport const setTeams = createAction('TIMERS_CALCULATOR / setTeams', (teams: {}) => ({ teams }));\n","import { createSelector } from 'reselect';\n\nimport { AppStoreState } from './types';\n\nexport const calculatorSelector = (state: AppStoreState) => state.calculator;\n\nexport const calculatorResultSelector = (state: AppStoreState) => calculatorSelector(state).results;\nexport const teamsSelector = (state: AppStoreState) => calculatorSelector(state).teams;\nexport const totalOvrSelector = (state: AppStoreState) => calculatorSelector(state).total;\nexport const needsSelector = (state: AppStoreState) => calculatorSelector(state).needs;\nexport const schemeSelector = (state: AppStoreState) => calculatorSelector(state).scheme;\n\nexport const customGlobalSearchSelector = createSelector(calculatorResultSelector, (result) => result);\n","// const decimalAdjust = (type: string, value: any, exp: any) => {\n//     if (typeof exp === 'undefined' || +exp === 0) {\n//         return Math[type](value);\n//     }\n//     value = +value;\n//     exp = +exp;\n//     if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n//         return NaN;\n//     }\n//     value = value.toString().split('e');\n//     value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n//     value = value.toString().split('e');\n//     return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n// }\n//\n// export function round10(value:any, exp:any) {\n//     return decimalAdjust('round', value, exp);\n// }\n//\n// export function ceil10(value:any, exp:any) {\n//     return decimalAdjust('ceil', value, exp);\n// }\n\nexport function countNeed(need: number, ranks?: number) {\n    let sum = need;\n    if (ranks) {\n        sum = sum - ranks;\n    }\n    const currentAverage = Math.ceil(sum / 11);\n    const targetSum = currentAverage * 11 + 0.01;\n    const diff = Math.ceil(targetSum - sum);\n\n    return Math.round(diff);\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { AppStoreState } from './types';\nimport { calculatorSelector } from './selectors';\n\nimport * as actionCreators from './action-creators';\nimport { CalculatorStateActionsType } from './reducers';\nimport { countNeed } from '../utils/countNeed';\n\nexport function onCount(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const results = calculatorSelector(state).results;\n        let ovr = 0;\n        let ranks = 0;\n        let boosts = 0;\n\n        // const test:any = {\n        // boost1: \"6\",\n        //     boost2: \"7\",\n        //     boost3: \"6\",\n        //     boost4: \"6\",\n        //     boost5: \"6\",\n        //     boost6: \"6\",\n        //     boost7: \"6\",\n        //     boost8: \"7\",\n        //     boost9: \"6\",\n        //     boost10: \"7\",\n        //     boost11: \"6\",\n        //     ovr1: \"88\",\n        //     ovr2: \"89\",\n        //     ovr3: \"93\",\n        //     ovr4: \"87\",\n        //     ovr5: \"87\",\n        //     ovr6: \"88\",\n        //     ovr7: \"88\",\n        //     ovr8: \"89\",\n        //     ovr9: \"90\",\n        //     ovr10: \"89\",\n        //     ovr11: \"88\",\n        //     rank1: \"5\",\n        //     rank2: \"5\",\n        //     rank3: \"5\",\n        //     rank4: \"5\",\n        //     rank5: \"5\",\n        //     rank6: \"5\",\n        //     rank7: \"5\",\n        //     rank8: \"5\",\n        //     rank9: \"5\",\n        //     rank10: \"10\",\n        //     rank11: \"5\"\n        // }\n\n        for (let i = 1; i <= Object.keys(results).length; i++) {\n            if (results['ovr' + i]) {\n                ovr += parseInt(results['ovr' + i]);\n            }\n            if (results['rank' + i]) {\n                ranks += parseInt(results['rank' + i]);;\n            }\n            if (results['boost' + i]) {\n                boosts += parseInt(results['boost' + i]);\n            }\n        }\n        const avgRanks = Math.ceil(ranks / 11);\n        const avgBoosts = Math.ceil(boosts / 11);\n        const avgOvr = Math.ceil((ovr - ranks) / 11);\n\n        const total = avgRanks + avgBoosts + avgOvr;\n\n        dispatch(actionCreators.setTotal(total));\n        dispatch(actionCreators.setNeeds({\n            ranks: countNeed(ranks),\n            boosts: countNeed(boosts),\n            ovr: countNeed(ovr, ranks)\n        }));\n    };\n}\n\nexport function onSave(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (_, getState) => {\n        const state = getState();\n        const results = calculatorSelector(state).results;\n        const scheme = calculatorSelector(state).scheme;\n\n        localStorage.setItem('scheme', scheme);\n        localStorage.setItem('results', JSON.stringify(results));\n    };\n}\n\nexport function onSaveTeam(id:string): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (_, getState) => {\n        const state = getState();\n        const results = calculatorSelector(state).results;\n        const scheme = calculatorSelector(state).scheme;\n        const teams = localStorage.getItem('teams');\n        const teamsObject = teams ? JSON.parse(teams) : {};\n        const team = {\n            scheme,\n            results\n        };\n\n        if (!teams) {\n            localStorage.setItem('teams', JSON.stringify({[id]: team}));\n        } else {\n            localStorage.setItem('teams', JSON.stringify({...teamsObject, team}));\n        }\n    };\n}\n\nexport function onLoad(team?: any): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (dispatch) => {\n        if (localStorage.getItem('results')) {\n            const scheme = localStorage.getItem('scheme') || '41212';\n            dispatch(actionCreators.setScheme(scheme));\n            const resultsSource = localStorage.getItem('results') || '';\n            const results = JSON.parse(resultsSource);\n            dispatch(actionCreators.setResults(results));\n            dispatch(onCount());\n        } else if (!!team) {\n            const scheme = team.scheme;\n            dispatch(actionCreators.setScheme(scheme));\n            const resultsSource = team.results;\n            dispatch(actionCreators.setResults(resultsSource));\n            dispatch(onCount());\n        }\n    };\n}\n\nexport function onLoadTeam(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (dispatch) => {\n        if (localStorage.getItem('teams')) {\n            // @ts-ignore\n            dispatch(actionCreators.setTeams(JSON.parse(localStorage.getItem('teams'))));\n        }\n    };\n}\n\nexport function onLoadTeams(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (dispatch) => {\n        if (localStorage.getItem('teams')) {\n            // @ts-ignore\n            dispatch(actionCreators.setTeams(JSON.parse(localStorage.getItem('teams'))));\n        }\n    };\n}\n\nexport function setScheme(scheme:string): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n    return async (dispatch) => {\n        dispatch(actionCreators.setScheme(scheme));\n    };\n}\n\n// export function getHistory(): ThunkAction<void, AppStoreState, void, CalculatorStateActionsType> {\n//     return async (dispatch) => {\n//         await fetchers\n//             .getHistory({\n//                 count: 5,\n//             })\n//             .then((data: any) => {\n//                 dispatch(actionCreators.getHistorySuccess(data));\n//             })\n//             .catch(() => {\n//                 dispatch(actionCreators.getHistoryFailure());\n//             });\n//     };\n// }\n","export const LOADING_STATE = {\n    UNKNOWN: 'UNKNOWN',\n    STARTED: 'STARTED',\n    LOADING: 'LOADING',\n    SUCCESS: 'SUCCESS',\n    FAILURE: 'FAILURE',\n};\n\nexport const SCHEMES = [\n    '41212',\n    '4222',\n    '4141',\n    '4231',\n    '424',\n    '4312',\n    '4321',\n    '433',\n    '4411',\n    '442',\n    '451',\n    '3412',\n    '3421',\n    '343',\n    '3511',\n    '352',\n    '5212',\n    '5221',\n    '532',\n    '541'\n];\n","import { createCn } from 'bem-react-classname';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { calculatorResultSelector } from '../../../redux/selectors';\n\nimport './rank-select.scss';\nimport * as actionCreators from '../../../redux/action-creators';\nimport * as thunks from '../../../redux/actions';\n\nconst cn = createCn('rank-select');\n\ntype RankSelect = {\n    id: string,\n}\n\nexport const RankSelect = ((props: RankSelect) => {\n    const { id } = props;\n    const results = useSelector(calculatorResultSelector);\n    const dispatch = useDispatch();\n    const componentRef = useRef(null);\n    const [visible, setVisible] = useState(false);\n\n    const handleClickOutside = useCallback((event: any) => {\n        // @ts-ignore\n        if (componentRef.current && !componentRef.current.contains(event.target)) {\n            setVisible(false);\n        }\n    }, []);\n\n    const onRankClick = useCallback(() => {\n        setVisible(true);\n    }, []);\n\n    const onStoneClick = useCallback((key) => {\n        setVisible(false);\n        dispatch(actionCreators.changeValue(id, key.toString()));\n        dispatch(thunks.onCount());\n    }, [setVisible]);\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside);\n\n        return () => {\n            document.removeEventListener('click', handleClickOutside);\n        };\n    }, []);\n\n    return (\n        <div className={ cn() } ref={ componentRef }>\n            <div className={ cn('rank') }>\n                <div className={ cn('result') } onClick={ () => onRankClick() }>{ results[id] || 0 }</div>\n                <div className={ cn('dropdown', { visible: visible }) }>\n                    { [0, 1, 2, 3, 4, 5].map((key) => (\n                        <div\n                            className={ cn('rank-item', { [key]: true }) }\n                            onClick={ () => onStoneClick(key) }\n                        >\n                            { key }\n                        </div>\n                    )) }\n                </div>\n            </div>\n\n        </div>\n    );\n});\n","import React, { Fragment, useCallback, useEffect, useRef } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { teamsSelector } from '../../../redux/selectors';\n\nimport './my-teams.scss';\nimport * as thunks from '../../../redux/actions';\n\nconst cn = createCn('my-teams');\n\nfunction isEmptyObject(obj: any) {\n    return Object.keys(obj).length === 0;\n}\n\nexport const MyTeams = (() => {\n    const dispatch = useDispatch();\n    const teams = useSelector(teamsSelector);\n    const options = !isEmptyObject(teams) ? Object.keys(teams) : [];\n    const ref = useRef(null);\n\n    console.log(Object.keys(teams));\n\n    const onSave = useCallback(\n        () => {\n            if (ref.current !== null) {\n                // @ts-ignore\n                const value = ref.current.value;\n                console.log(value);\n                const id = value.replace(/\\s/g, '');\n                const lowercaseId = id.toLowerCase();\n                dispatch(thunks.onSaveTeam(lowercaseId));\n            }\n        },\n        [dispatch]\n    );\n\n    const onLoad = useCallback(\n        () => {\n            if (ref.current !== null) {\n                // @ts-ignore\n                const value = ref.current.value;\n                console.log(value);\n                const id = value.replace(/\\s/g, '');\n                const lowercaseId = id.toLowerCase();\n                dispatch(thunks.onSaveTeam(lowercaseId));\n            }\n        },\n        [dispatch]\n    );\n\n    useEffect(() => {\n    }, [])\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('input') }>\n                <input type=\"text\" name={ 'new_team' } placeholder={ 'Team name' } ref={ ref }/>\n            </div>\n            <div className={ cn('save') }>\n                <button onClick={ onSave }>Save</button>\n            </div>\n            { !isEmptyObject(teams) &&\n                <Fragment>\n                    <div className={ cn('hr') }/>\n                    <div className={ cn('teams') }>\n                        <select name=\"teams\" id=\"teams\">\n                            { options.map((item) => {\n                                return <option value={ item }>{ item }</option>\n                            }) }\n                        </select>\n                    </div>\n                    <br/>\n                    <div className={ cn('load') }>\n                        <button onClick={ onLoad }>Load</button>\n                    </div>\n                </Fragment>\n\n            }\n        </div>\n    );\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './calculator-page.scss';\nimport * as actionCreators from '../../redux/action-creators';\nimport * as thunks from '../../redux/actions';\nimport { calculatorResultSelector, needsSelector, schemeSelector, totalOvrSelector } from '../../redux/selectors';\nimport { SCHEMES } from '../../redux/constants';\nimport { countBase } from '../../utils/countBase';\nimport { RankSelect } from './rank-select/rank-select';\nimport { MyTeams } from './my-teams/my-teams';\n\nconst cn = createCn('calculator-page');\n\nexport const CalculatorPage = (() => {\n    const dispatch = useDispatch();\n    const results = useSelector(calculatorResultSelector);\n    const total = useSelector(totalOvrSelector);\n    const needs = useSelector(needsSelector);\n    const scheme = useSelector(schemeSelector);\n    const [curScheme, setCurScheme] = useState('41212');\n\n    const onChangeValue = useCallback(\n        (id, e) => {\n            console.log(id);\n            dispatch(actionCreators.changeValue(id, e.target.value));\n            dispatch(thunks.onCount());\n        },\n        [dispatch]\n    );\n\n    const onSave = useCallback(\n        () => {\n            dispatch(thunks.onSave());\n        },\n        [dispatch]\n    );\n\n    const onLoad = useCallback(\n        () => {\n            dispatch(thunks.onLoad());\n        },\n        [dispatch]\n    );\n\n    const onSelect = useCallback(\n        (e) => {\n            setCurScheme(e.target.value);\n            dispatch(thunks.setScheme(e.target.value));\n        }, []\n    );\n\n    useEffect(() => {\n        setCurScheme(scheme);\n    }, [scheme]);\n\n    useEffect(() => {\n        dispatch(thunks.onLoad());\n        dispatch(thunks.onLoadTeams());\n    }, [])\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('data') }>\n                {/*<div className={ cn('total') }>Total ovr: { total }</div>*/ }\n                <div className={ cn('buttons') }>\n                    {/*<button className='button'  onClick={ onCount }>Count</button>*/ }\n                    <button className=\"button_load\" onClick={ onLoad }>Load</button>\n                    <button className=\"button_save\" onClick={ onSave }>Save</button>\n                </div>\n            </div>\n            <div className={ cn('need-content') }>\n                <div className={ cn('total') }>Total OVR: { total }</div>\n                <div className={ cn('hr') }/>\n                <div className={ cn('need') }>Next OVR</div>\n                <table className={ cn('need-table') }>\n                    <tr>\n                        <td>OVR:</td>\n                        <td>{ needs.ovr }</td>\n                    </tr>\n                    <tr>\n                        <td>Ranks:</td>\n                        <td>{ needs.ranks }</td>\n                    </tr>\n                </table>\n                <div className={ cn('scheme') }>\n                    <select id={ 'scheme' } value={ curScheme } onChange={ onSelect }>\n                        { SCHEMES.map((sch) => <option selected={ curScheme === sch } value={ sch }>{ sch }</option>) }\n                    </select>\n                </div>\n                <div className={ cn('hr', {hidden: true}) }/>\n                <MyTeams/>\n            </div>\n            <div className={ cn('field') }>\n                { [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((key) => (\n                    <div className={ cn('position',\n                        { master: results['ovr' + key] >= 90, ['position_' + key]: true, [scheme]: true }) }>\n                        <div className={ cn('stone', {\n                            emerald: results['rank' + key] === '1',\n                            saphire: results['rank' + key] === '2',\n                            ametyst: results['rank' + key] === '3',\n                            ruby: results['rank' + key] === '4',\n                            ember: results['rank' + key] === '5'\n                        }) }/>\n                        { ['ovr'].map((sub) => (\n                            <div className={ cn(sub) }>\n                                <input\n                                    id={ sub + key }\n                                    // onFocus={ (e) => onFocus(e) }\n                                    onChange={ (e) => onChangeValue(sub + key, e) }\n                                    value={ results[sub + key] }\n                                    type={ 'number' }\n                                />\n                            </div>\n                        )) }\n                        { ['rank'].map((sub) => (\n                            <RankSelect\n                                id={ sub + key }\n                            />\n                        )) }\n                        <div className={ cn('base_ovr') }>\n                            { countBase(results['ovr' + key], results['rank' + key]) }\n                        </div>\n                    </div>\n                )) }\n            </div>\n        </div>\n    );\n});\n","// const decimalAdjust = (type: string, value: any, exp: any) => {\n//     if (typeof exp === 'undefined' || +exp === 0) {\n//         return Math[type](value);\n//     }\n//     value = +value;\n//     exp = +exp;\n//     if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n//         return NaN;\n//     }\n//     value = value.toString().split('e');\n//     value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n//     value = value.toString().split('e');\n//     return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n// }\n//\n// export function round10(value:any, exp:any) {\n//     return decimalAdjust('round', value, exp);\n// }\n//\n// export function ceil10(value:any, exp:any) {\n//     return decimalAdjust('ceil', value, exp);\n// }\n\nexport function countBase(ovr: string, rank: string) {\n    if (ovr && rank) {\n        return parseInt(ovr, 10) - parseInt(rank, 10);\n    } else if (!ovr && rank) {\n        return rank;\n    } else if (ovr && !rank) {\n        return ovr;\n    }\n\n    return 0;\n}\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './group.scss';\n\nconst cn = createCn('group');\n\ntype OwnProps = Partial<{\n    group: any;\n}>\n\nexport const Group = React.memo<OwnProps>((props) => {\n    const { name, leagues } = props.group;\n    const eventImg = '/f-mobile-timers/img/groups/' + name.replace(/\\s/g, '').toLowerCase() + '.png';\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }>\n                <img src={ eventImg } alt=\"\"/>\n            </div>\n            <div className={ cn('content') }>\n                <div className={ cn('header') }>\n\n                    <div className={ cn('name') }>\n                        { name }\n                    </div>\n                </div>\n\n                <div className={ cn('leagues') }>\n                    { leagues.map((league: string) => {\n                        return <div className={ cn('league') }>{ league }</div>\n                    }) }\n                </div>\n            </div>\n        </div>\n    );\n});\n","export const Groups = [\n    {\n        name: 'England',\n        leagues: [\n            'Premier League',\n            'EFL Championship',\n            'EFL League 1',\n            'EFL League 2'\n        ]\n    },\n    {\n        name: 'France',\n        leagues: [\n            'Ligue 1 Uber Eats',\n            'Ligue 2 BKT'\n        ]\n    },\n    {\n        name: 'Italy',\n        leagues: [\n            'Serie A TIM',\n            'Calcio B'\n        ]\n    },\n    {\n        name: 'Germany',\n        leagues: [\n            'Bundesliga',\n            'Bundesliga 2',\n            '3. Liga'\n        ]\n    },\n    {\n        name: 'Spain',\n        leagues: [\n            'LaLiga Santander',\n            'LaLiga Smartbank'\n        ]\n    },\n    {\n        name: 'Western Europe',\n        leagues: [\n            'Liga NOS (Portugal)',\n            'Eredivisie (Netherlands)',\n            '1A Pro League (Belgium)',\n            'Scottish Prem (Scotland)',\n            'SSE Airtricity Lge (Ireland)'\n        ]\n    },\n    {\n        name: 'Eastern Europe',\n        leagues: [\n            'RSL (Switzerland)',\n            'O. Bundesliga (Austria)',\n            '3F Superliga (Denmark)',\n            'Eliteserien (Norway)',\n            'Allsvenskan (Sweden)',\n            'PKO Ektstraklasa (Poland)',\n            'Liga I (Romania)',\n            'Super Lig (Turkey)',\n            'Finnliga (Finland)',\n            'Ceska Liga (Czech Republic)',\n            'League of Russia (Russia)',\n            'Ukrayina Liha (Ukraine)',\n            'Liga Hrvatska (Croatia)',\n            'Hellas Liga (Greece)'\n        ]\n    },\n    {\n        name: 'Rest of World',\n        leagues: [\n            'MLS (USA/Canada)',\n            'Liga BBVA MX (Mexico)',\n            'LPF (Argentina)',\n            'CSL (China)',\n            'K-League 1 (South Korea)',\n            'A-League (Australia/New Zealand)',\n            'Hero ISL (India)',\n            'MBS Pro League (Saudi Arabia)',\n            'United Emirates League (UAE)',\n            'South African FL (South Africa)'\n        ]\n    }\n];\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Group } from '../../components/group/group';\nimport { Groups } from '../../constants/groups'\n\nimport './chemistry-groups.scss';\n\nconst cn = createCn('chemistry-groups');\n\nexport const ChemistryGroups = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <div className={ cn('content') }>\n                {Groups.map((group) => {\n                    return <Group group={group} />\n                })}\n            </div>\n        </div>\n    );\n});\n","export const LOG = [\n    {\n        version: '4.1.0',\n        changes: [\n            'Актуализированы таймеры',\n        ]\n    },\n    {\n        version: '4.0.0',\n        changes: [\n            'Калькулятор нового сезона',\n        ]\n    },\n    {\n        version: '3.11.3',\n        changes: [\n            'Добавлены таймеры Carniball',\n        ]\n    },\n    {\n        version: '3.10.3',\n        changes: [\n            'Добавлены таймеры старта глав TOTY',\n        ]\n    },\n    {\n        version: '3.9.3',\n        changes: [\n            'Поправлено округление при подсчете ранков',\n        ]\n    },\n    {\n        version: '3.9.2',\n        changes: [\n            'Добавил TOTY',\n        ]\n    },\n    {\n        version: '3.8.2',\n        changes: [\n            'Таймеры учитывают таймзону и рассчитываются верно',\n        ]\n    },\n    {\n        version: '3.7.2',\n        changes: [\n            'Мобильный вид калькулятора'\n        ]\n    },\n    {\n        version: '3.6.2',\n        changes: [\n            'Переписана логика таймеров',\n            'Добавлены таймеры апдейтов'\n        ]\n    },\n    {\n        version: '2.6.2',\n        changes: [\n            'Пересчет при изменении данных'\n        ]\n    },\n    {\n        version: '2.5.2',\n        changes: [\n            'Добавлена возможность выбирать и сохранять схему'\n        ]\n    },\n    {\n        version: '2.4.2',\n        changes: [\n            'Переделанная верстка калькулятора'\n        ]\n    },\n    {\n        version: '2.3.2',\n        changes: [\n            'Релиз для Сереги',\n            'Поправлена навигация, любую вкладку можно открыть по прямой ссылке'\n        ]\n    },\n    {\n        version: '2.2.2',\n        changes: [\n            'Сохранение и загрузка'\n        ]\n    },\n    {\n        version: '2.1.2',\n        changes: [\n            'Версия посвященная Лизе',\n            'Добавлены актуальные события'\n        ]\n    }\n];\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport './changelog-page.scss';\nimport { LOG } from './constants';\n\nconst cn = createCn('changelog-page');\n\nexport const ChangelogPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <div className={cn(\"version\")}>\n                Changelog\n            </div>\n            <div className={cn('contacts')}>\n                <div>\n                    Contacts:\n                </div>\n                <div><img src=\"/f-mobile-timers/img/discord.png\" alt=\"\"/>denim3000#0908</div>\n            </div>\n            <div className={cn(\"changes\")}>\n                {LOG.map((log) => {\n                    return <div className={cn('row')}>\n                        <div className={cn('small-version')}>\n                            {\n                                log.version\n                            }\n                        </div>\n                        <div className={cn('description')}>\n                            <ul>\n                                {log.changes.map((change) => {\n                                    return <li>- {change}</li>;\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                })}\n\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect,\n    useState\n} from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport { TimersPage } from './timers-page/timers-page';\nimport { CalculatorPage } from './calculator-page/calculator-page';\nimport { ChemistryGroups } from './chemistry-groups/chemistry-groups';\nimport { ChangelogPage } from './changelog-page/changelog-page';\n\nexport const CustomRouter = React.memo(() => {\n    const [route, setRoute] = useState(<CalculatorPage/>);\n    const location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const {router} = values;\n\n        switch (router) {\n            case 'chemistry':\n                setRoute(<ChemistryGroups/>);\n                break;\n            case 'timers':\n                setRoute(<TimersPage/>);\n                break;\n            case 'calculator':\n                setRoute(<CalculatorPage/>);\n                break;\n            case 'changelog':\n                setRoute(<ChangelogPage/>);\n                break;\n            default:\n                setRoute(<CalculatorPage/>);\n        }\n    }, [location]);\n\n    return (\n        <React.Fragment>\n            {route}\n        </React.Fragment>\n    );\n});\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Logo } from './components/logo/logo';\nimport { Navbar } from './components/navbar/navbar';\nimport { NavLink } from 'react-router-dom'\nimport { createCn } from 'bem-react-classname';\n\nimport './App.scss';\nimport { CustomRouter } from './containers/custom-router';\n\nconst cn = createCn('App');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div className={ cn('header') }>\n                    <div className='inner'>\n                        <NavLink exact={ true } to={'/f-mobile-timers?'} ><Logo/></NavLink>\n                        <Navbar/>\n                    </div>\n                </div>\n                <div className={ cn('content') }>\n                    <div className='inner'>\n                        <Switch>\n                            <Route path={ '/f-mobile-timers' }>\n                                <CustomRouter/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    combineReducers, Reducer, ReducersMapObject, Store,\n} from 'redux';\n\nexport class ReducerManager {\n    reducers: ReducersMapObject;\n\n    store: Store;\n\n    constructor(initialReducers: ReducersMapObject, store: Store) {\n        this.reducers = { ...initialReducers };\n        this.store = store;\n    }\n\n    add(key: string, reducer: Reducer) {\n        if (!key || this.reducers[key]) {\n            return;\n        }\n\n        this.reducers[key] = reducer;\n        this.store?.replaceReducer(combineReducers(this.reducers));\n    }\n\n    remove(key: string) {\n        if (!key || !this.reducers[key]) {\n            return;\n        }\n\n        delete this.reducers[key];\n\n        this.store?.replaceReducer(combineReducers(this.reducers));\n    }\n}\n","import { ActionType } from './types';\nimport * as actionCreators from './action-creators';\n\nexport type CalculatorStateActionsType = ActionType<typeof actionCreators>;\n\nexport type CalculatorState = {\n    teams: any,\n    results: any,\n    total: number,\n    needs: any,\n    scheme: string\n};\n\nconst initialState: CalculatorState = {\n    teams: {},\n    results: {},\n    total: 0,\n    needs: {\n        ranks: 0,\n        boosts: 0,\n        ovr: 0\n    },\n    scheme: '41212'\n};\n\nexport function calculatorReducer(\n    state: CalculatorState = initialState,\n    action: CalculatorStateActionsType\n): CalculatorState {\n    switch (action.type) {\n        case actionCreators.changeValue.type:\n            console.log(action);\n            return {\n                ...state,\n                results: {...state.results, [action.id]: action.value}\n            };\n        case actionCreators.setTotal.type:\n            return {\n                ...state,\n                total: action.total\n            };\n        case actionCreators.setResults.type:\n            return {\n                ...state,\n                results: action.results\n            };\n        case actionCreators.setNeeds.type:\n            return {\n                ...state,\n                needs: action.needs\n            };\n        case actionCreators.setScheme.type:\n            console.log(action.scheme);\n            return {\n                ...state,\n                scheme: action.scheme\n            };\n\n        case actionCreators.setTeams.type:\n            console.log(action.teams);\n            return {\n                ...state,\n                teams: action.teams\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    applyMiddleware, combineReducers, compose, createStore, PreloadedState, ReducersMapObject,\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { ReducerManager } from './reducer-manager';\nimport { AppStore, AppStoreState } from './types';\nimport { calculatorReducer } from './reducers';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; // eslint-disable-line no-underscore-dangle\n\nfunction configureStore(\n    staticReducers: ReducersMapObject<Partial<AppStoreState>>,\n    initialState?: PreloadedState<Partial<AppStoreState>>,\n): AppStore {\n    const store: AppStore = createStore(\n        combineReducers(staticReducers),\n        initialState,\n        composeEnhancers(applyMiddleware(thunk)),\n    );\n\n    store.reducerManager = new ReducerManager(staticReducers, store);\n\n    return store;\n}\n\nexport const store = configureStore({\n    calculator: calculatorReducer,\n} as ReducersMapObject<Partial<AppStoreState>>);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}