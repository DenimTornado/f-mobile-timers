{"version":3,"sources":["containers/events-page/events-page.tsx","constants/events.ts","components/event-duration/event-duration.tsx","components/sub-event-row/sub-event-row.tsx","components/event-row/event-row.tsx","utils/getActualEvent.ts","containers/timers-page/timers-page.tsx","components/logo/logo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cn","createCn","EventsPage","React","className","Events","ids","note","event","name","timer","repeatable","sub_events","EventDuration","memo","props","now","duration","date","format","SubEventRow","expiring","useState","Date","setNow","eventDate","useEffect","setInterval","EventRow","eventImg","src","alt","map","value","getActualEvent","eventTime","getTime","actualEvent","fullWeeks","moment","diff","newDateFormatted","add","TimersPage","actualEvents","setActualEvents","i","length","subEvents","Logo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47274c3b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './events-page.scss';\n\nconst cn = createCn('events-page');\n\nexport const EventsPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            Events\n        </div>\n    );\n});\n","export const Events = [\n    {\n        ids: 'marquee',\n        note: '',\n        event: {\n            name: 'marquee stars',\n            timer: '2021-01-26T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n\n        ]\n    },\n    {\n        ids: 'uel',\n        note: '',\n        event: {\n            name: 'UEFA Europa League',\n            timer: '2021-01-21T22:00:00+03:00'\n        },\n        repeatable: '',\n        sub_events: [\n            {\n                name: 'Energy offer (coins)',\n                timer: '2021-01-21T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'leagues',\n        note: '',\n        repeatable: 'weekly',\n        event: {\n            name: 'League matchups',\n            timer: '2021-01-18T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'icons',\n        note: 'Dont forget to play skill games',\n        repeatable: 'weekly',\n        event: {\n            name: 'icons strike',\n            timer: '2021-01-21T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'becks',\n        note: 'Dont forget to get Beckham points from ads',\n        repeatable: 'weekly',\n        event: {\n            name: 'beckham quests',\n            timer: '2021-01-07T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'rivals',\n        note: '',\n        repeatable: 'monthly',\n        event: {\n            name: 'division rivals',\n            timer: '2021-01-25T22:00:00+03:00'\n        },\n        sub_events: [\n            {\n                name: 'weekly update',\n                repeatable: 'weekly',\n                timer: '2021-01-13T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'starpass',\n        note: '',\n        repeatable: 'monthly',\n        event: {\n            name: 'starpass',\n            timer: '2021-01-27T22:00:00+03:00'\n        },\n        sub_events: []\n    }\n];\n","import React from 'react';\nimport Moment from 'react-moment';\n\nimport './event-duration.scss';\n\ntype OwnProps = Partial<{\n    now: any;\n    duration: any;\n}>\n\nexport const EventDuration = React.memo<OwnProps>((props) => {\n    const { now, duration } = props;\n\n    return (\n        <Moment duration={ now }\n                date={ duration }\n                format=\"D[d.] hh:mm:ss\"\n        />\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './sub-event-row.scss';\n\nconst cn = createCn('sub-event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const SubEventRow = React.memo<OwnProps>((props) => {\n    const { name, timer, expiring } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(timer);\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('name') }>{ name }</div>\n            <div className={ cn('timer', {expiring: expiring}) }>\n                <EventDuration now={ now } duration={ eventDate }/>\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { SubEventRow } from '../sub-event-row/sub-event-row';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './event-row.scss';\n\nconst cn = createCn('event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const EventRow = React.memo<OwnProps>((props) => {\n    const { ids, event, note, sub_events } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(event.timer);\n    const eventImg = '/fmt/img/programs/' + ids + '.png';\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }><img src={ eventImg } alt=\"\"/></div>\n            <div className={ cn('content') }>\n                <div className={ cn('main_event') }>\n                    <div className={ cn('name') }>{ event.name }</div>\n                    <div className={ cn('timer', {expiring: event.expiring}) }>\n                        <EventDuration now={ now } duration={ eventDate }/>\n                    </div>\n                </div>\n\n                <div className={ cn('sub_events') }>\n                    { sub_events.map((value: any) => (<SubEventRow key={ value.ids } event={ value }/>)) }\n                </div>\n\n                <div className={ cn('event_note') }>\n                    { note }\n                </div>\n            </div>\n        </div>\n    );\n});\n","import moment from 'moment';\nconst format = 'YYYY-MM-DDTHH:mm:ss+03:00';\n\nexport function getActualEvent(value:any) {\n    const now = new Date().getTime();\n    let actualEvent = value;\n    let eventTime, newDate;\n\n    if (value.event) {\n        eventTime = new Date(value.event.timer).getTime();\n    } else {\n        eventTime = new Date(value.timer).getTime();\n    }\n\n\n    if (actualEvent.repeatable !== '' && eventTime <= now) {\n        if (actualEvent.repeatable === 'weekly') {\n            const fullWeeks = moment(eventTime).diff(now, 'w') * -1 + 1;\n            newDate = moment(eventTime).add(fullWeeks, 'w');\n            const newDateFormatted = newDate.format(format);\n\n            if (actualEvent.event) {\n                actualEvent.event.timer = newDateFormatted;\n            } else {\n                actualEvent.timer = newDateFormatted;\n            }\n        }\n    }\n\n    const timer = actualEvent.event ? actualEvent.event.timer : actualEvent.timer;\n    const newDateSeconds = new Date(moment(timer).format()).getTime();\n    const expiring = newDateSeconds - now <= 1000 * 60 * 60 * 24;\n\n    if (actualEvent.event) {\n        actualEvent.event.expiring = expiring;\n    } else {\n        actualEvent.expiring = expiring;\n    }\n\n    return actualEvent;\n}\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Events } from '../../constants/events';\nimport { EventRow } from '../../components/event-row/event-row';\nimport { getActualEvent } from '../../utils/getActualEvent';\n\nimport './timers-page.scss';\n\n\nconst cn = createCn('timers-page');\nconst now = new Date().getTime();\n\nexport const TimersPage = React.memo(() => {\n    const [actualEvents, setActualEvents] = useState([]);\n\n    useEffect(() => {\n        let actualEvents = [...Events];\n        for (let i = 0; i < Events.length; i++) {\n            actualEvents[i] = getActualEvent(actualEvents[i]);\n            let subEvents = actualEvents[i].sub_events;\n            for (let i = 0; i < subEvents.length; i++) {\n                subEvents[i] = getActualEvent(subEvents[i]);\n            }\n            actualEvents[i].sub_events = subEvents;\n        }\n        // @ts-ignore\n        setActualEvents(actualEvents);\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            { actualEvents.map((value:any) => {\n                const eventTimer = new Date(value.event.timer).getTime();\n                if (eventTimer > now) {\n                    return <EventRow key={value.ids} event={ value }/>\n                }\n\n                return null;\n            })}\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './logo.scss';\n\nconst cn = createCn('logo');\n\nexport const Logo = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <img src=\"/fmt/img/logo.png\" alt=\"\" />\n        </div>\n    );\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { EventsPage } from './containers/events-page/events-page';\nimport { TimersPage } from './containers/timers-page/timers-page';\nimport { Logo } from './components/logo/logo';\n// import { Navbar } from './components/navbar/navbar';\nimport { createCn } from 'bem-react-classname';\n\nimport './App.scss';\n\nconst cn = createCn('App');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className={ cn('header') }>\n                <div className='inner'>\n                    <Logo/>\n                    {/*<Navbar/>*/}\n                </div>\n            </div>\n            <div className={ cn('content') }>\n                <div className='inner'>\n                    <Router>\n                        <Switch>\n                            <Route exact={ true } path={ '/fmt' }>\n                                <TimersPage/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/events' }>\n                                <EventsPage/>\n                            </Route>\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}