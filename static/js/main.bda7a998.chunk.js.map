{"version":3,"sources":["containers/events-page/events-page.tsx","constants/events.ts","components/event-duration/event-duration.tsx","components/sub-event-row/sub-event-row.tsx","components/event-row/event-row.tsx","containers/timers-page/timers-page.tsx","components/logo/logo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cn","createCn","EventsPage","React","className","Events","ids","note","event","name","timer","repitable","sub_events","EventDuration","memo","props","now","duration","date","format","SubEventRow","useState","Date","setNow","eventDate","useEffect","setInterval","EventRow","eventImg","src","alt","map","value","getTime","TimersPage","console","log","eventTime","diff","moment","fullWeeks","Math","ceil","need","Logo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bda7a998.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './events-page.scss';\n\nconst cn = createCn('events-page');\n\nexport const EventsPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            Events\n        </div>\n    );\n});\n","export const Events = [\n    {\n        ids: 'uel',\n        note: '',\n        event: {\n            name: 'UEFA Europa League',\n            timer: '2021-01-21T22:00:00+03:00'\n        },\n        repitable: '',\n        sub_events: [\n            {\n                name: 'Energy offer (coins)',\n                timer: '2021-01-21T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'leagues',\n        note: '',\n        repitable: 'weekly',\n        event: {\n            name: 'League matchups',\n            timer: '2021-01-25T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'icons',\n        note: 'Dont forget to play skill games',\n        repitable: 'weekly',\n        event: {\n            name: 'icons strike',\n            timer: '2021-01-21T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'becks',\n        note: 'Dont forget to get Beckham points from ads',\n        repitable: 'weekly',\n        event: {\n            name: 'beckham quests',\n            timer: '2021-01-06T22:00:00+03:00'\n        },\n        sub_events: []\n    },\n    {\n        ids: 'rivals',\n        note: '',\n        repitable: 'monthly',\n        event: {\n            name: 'division rivals',\n            timer: '2021-01-25T22:00:00+03:00'\n        },\n        sub_events: [\n            {\n                name: 'weekly update',\n                repitable: 'weekly',\n                timer: '2021-01-20T22:00:00+03:00'\n            }\n        ]\n    },\n    {\n        ids: 'starpass',\n        note: '',\n        repitable: 'monthly',\n        event: {\n            name: 'starpass',\n            timer: '2021-01-27T22:00:00+03:00'\n        },\n        sub_events: []\n    }\n];\n","import React from 'react';\nimport Moment from 'react-moment';\n\nimport './event-duration.scss';\n\ntype OwnProps = Partial<{\n    now: any;\n    duration: any;\n}>\n\nexport const EventDuration = React.memo<OwnProps>((props) => {\n    const { now, duration } = props;\n\n    return (\n        <Moment duration={ now }\n                date={ duration }\n                format=\"D[d.] hh:mm:ss\"\n        />\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './sub-event-row.scss';\n\nconst cn = createCn('sub-event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const SubEventRow = React.memo<OwnProps>((props) => {\n    const { name, timer } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(timer);\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('name') }>{ name }</div>\n            <div className={ cn('timer') }>\n                <EventDuration now={ now } duration={ eventDate }/>\n            </div>\n        </div>\n    );\n});\n","import React, { useEffect, useState } from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { SubEventRow } from '../sub-event-row/sub-event-row';\nimport { EventDuration } from '../event-duration/event-duration';\n\nimport './event-row.scss';\n\nconst cn = createCn('event-row');\n\ntype OwnProps = Partial<{\n    event: any;\n}>\n\nexport const EventRow = React.memo<OwnProps>((props) => {\n    const { ids, event, note, sub_events } = props.event;\n    const [now, setNow] = useState(new Date());\n    const eventDate = new Date(event.timer);\n    const eventImg = '/fmt/img/programs/' + ids + '.png';\n\n    useEffect(() => {\n        setInterval(() => {\n            const now = new Date();\n            setNow(now)\n        }, 1000)\n    }, []);\n\n    return (\n        <div className={ cn() }>\n            <div className={ cn('img') }><img src={ eventImg } alt=\"\"/></div>\n            <div className={ cn('content') }>\n                <div className={ cn('main_event') }>\n                    <div className={ cn('name') }>{ event.name }</div>\n                    <div className={ cn('timer') }>\n                        <EventDuration now={ now } duration={ eventDate }/>\n                    </div>\n                </div>\n\n                <div className={ cn('sub_events') }>\n                    { sub_events.map((value: any) => (<SubEventRow key={ value.ids } event={ value }/>)) }\n                </div>\n\n                <div className={ cn('event_note') }>\n                    { note }\n                </div>\n            </div>\n        </div>\n    );\n});\n","import React from 'react';\nimport { createCn } from 'bem-react-classname';\nimport { Events } from '../../constants/events';\nimport { EventRow } from '../../components/event-row/event-row';\nimport moment from 'moment';\n\nimport './timers-page.scss';\n\nconst cn = createCn('timers-page');\nconst now = new Date().getTime();\n\nexport const TimersPage = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            { Events.map((value) => {\n                console.log(value.event.name);\n                let eventTime = new Date(value.event.timer).getTime();\n                if (value.repitable !== '') {\n                    if (value.repitable === 'weekly') {\n                        const diff = moment(eventTime).diff(now, 'day');\n                        const fullWeeks = Math.ceil( diff / 7);\n                        const need = 7 - (fullWeeks * 7 - diff);\n                        console.log(diff, fullWeeks, need);\n                    }\n                }\n\n                if (eventTime > now) {\n                    return <EventRow key={value.ids} event={ value }/>\n                }\n            })}\n        </div>\n    );\n});\n","import * as React from 'react';\nimport { createCn } from 'bem-react-classname';\n\nimport './logo.scss';\n\nconst cn = createCn('logo');\n\nexport const Logo = React.memo(() => {\n    return (\n        <div className={ cn() }>\n            <img src=\"/fmt/img/logo.png\" alt=\"\" />\n        </div>\n    );\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { EventsPage } from './containers/events-page/events-page';\nimport { TimersPage } from './containers/timers-page/timers-page';\nimport { Logo } from './components/logo/logo';\n// import { Navbar } from './components/navbar/navbar';\nimport { createCn } from 'bem-react-classname';\n\nimport './App.scss';\n\nconst cn = createCn('App');\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className={ cn('header') }>\n                <div className='inner'>\n                    <Logo/>\n                    {/*<Navbar/>*/}\n                </div>\n            </div>\n            <div className={ cn('content') }>\n                <div className='inner'>\n                    <Router>\n                        <Switch>\n                            <Route exact={ true } path={ '/fmt' }>\n                                <TimersPage/>\n                            </Route>\n                            <Route exact={ true } path={ '/fmt/events' }>\n                                <EventsPage/>\n                            </Route>\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}